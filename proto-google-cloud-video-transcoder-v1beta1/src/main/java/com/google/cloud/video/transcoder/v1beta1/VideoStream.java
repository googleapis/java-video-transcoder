/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/video/transcoder/v1beta1/resources.proto

package com.google.cloud.video.transcoder.v1beta1;

/**
 *
 *
 * <pre>
 * Video stream resource.
 * </pre>
 *
 * Protobuf type {@code google.cloud.video.transcoder.v1beta1.VideoStream}
 */
public final class VideoStream extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.video.transcoder.v1beta1.VideoStream)
    VideoStreamOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use VideoStream.newBuilder() to construct.
  private VideoStream(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private VideoStream() {
    codec_ = "";
    profile_ = "";
    tune_ = "";
    preset_ = "";
    pixelFormat_ = "";
    rateControlMode_ = "";
    entropyCoder_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new VideoStream();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private VideoStream(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              java.lang.String s = input.readStringRequireUtf8();

              codec_ = s;
              break;
            }
          case 18:
            {
              java.lang.String s = input.readStringRequireUtf8();

              profile_ = s;
              break;
            }
          case 26:
            {
              java.lang.String s = input.readStringRequireUtf8();

              tune_ = s;
              break;
            }
          case 34:
            {
              java.lang.String s = input.readStringRequireUtf8();

              preset_ = s;
              break;
            }
          case 40:
            {
              heightPixels_ = input.readInt32();
              break;
            }
          case 48:
            {
              widthPixels_ = input.readInt32();
              break;
            }
          case 58:
            {
              java.lang.String s = input.readStringRequireUtf8();

              pixelFormat_ = s;
              break;
            }
          case 64:
            {
              bitrateBps_ = input.readInt32();
              break;
            }
          case 74:
            {
              java.lang.String s = input.readStringRequireUtf8();

              rateControlMode_ = s;
              break;
            }
          case 80:
            {
              enableTwoPass_ = input.readBool();
              break;
            }
          case 88:
            {
              crfLevel_ = input.readInt32();
              break;
            }
          case 96:
            {
              vbvSizeBits_ = input.readInt32();
              break;
            }
          case 104:
            {
              vbvFullnessBits_ = input.readInt32();
              break;
            }
          case 112:
            {
              allowOpenGop_ = input.readBool();
              break;
            }
          case 120:
            {
              gopModeCase_ = 15;
              gopMode_ = input.readInt32();
              break;
            }
          case 130:
            {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (gopModeCase_ == 16) {
                subBuilder = ((com.google.protobuf.Duration) gopMode_).toBuilder();
              }
              gopMode_ =
                  input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.google.protobuf.Duration) gopMode_);
                gopMode_ = subBuilder.buildPartial();
              }
              gopModeCase_ = 16;
              break;
            }
          case 138:
            {
              java.lang.String s = input.readStringRequireUtf8();

              entropyCoder_ = s;
              break;
            }
          case 144:
            {
              bPyramid_ = input.readBool();
              break;
            }
          case 152:
            {
              bFrameCount_ = input.readInt32();
              break;
            }
          case 161:
            {
              frameRate_ = input.readDouble();
              break;
            }
          case 169:
            {
              aqStrength_ = input.readDouble();
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
        .internal_static_google_cloud_video_transcoder_v1beta1_VideoStream_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
        .internal_static_google_cloud_video_transcoder_v1beta1_VideoStream_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.video.transcoder.v1beta1.VideoStream.class,
            com.google.cloud.video.transcoder.v1beta1.VideoStream.Builder.class);
  }

  private int gopModeCase_ = 0;
  private java.lang.Object gopMode_;

  public enum GopModeCase
      implements
          com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    GOP_FRAME_COUNT(15),
    GOP_DURATION(16),
    GOPMODE_NOT_SET(0);
    private final int value;

    private GopModeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GopModeCase valueOf(int value) {
      return forNumber(value);
    }

    public static GopModeCase forNumber(int value) {
      switch (value) {
        case 15:
          return GOP_FRAME_COUNT;
        case 16:
          return GOP_DURATION;
        case 0:
          return GOPMODE_NOT_SET;
        default:
          return null;
      }
    }

    public int getNumber() {
      return this.value;
    }
  };

  public GopModeCase getGopModeCase() {
    return GopModeCase.forNumber(gopModeCase_);
  }

  public static final int CODEC_FIELD_NUMBER = 1;
  private volatile java.lang.Object codec_;
  /**
   *
   *
   * <pre>
   * Codec type. The default is `"h264"`.
   * Supported codecs:
   * - 'h264'
   * - 'h265'
   * - 'vp9'
   * </pre>
   *
   * <code>string codec = 1;</code>
   *
   * @return The codec.
   */
  @java.lang.Override
  public java.lang.String getCodec() {
    java.lang.Object ref = codec_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      codec_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Codec type. The default is `"h264"`.
   * Supported codecs:
   * - 'h264'
   * - 'h265'
   * - 'vp9'
   * </pre>
   *
   * <code>string codec = 1;</code>
   *
   * @return The bytes for codec.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCodecBytes() {
    java.lang.Object ref = codec_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      codec_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROFILE_FIELD_NUMBER = 2;
  private volatile java.lang.Object profile_;
  /**
   *
   *
   * <pre>
   * Enforce specified codec profile. The default is `"high"`.
   * Supported codec profiles:
   * - 'baseline'
   * - 'main'
   * - 'high'
   * </pre>
   *
   * <code>string profile = 2;</code>
   *
   * @return The profile.
   */
  @java.lang.Override
  public java.lang.String getProfile() {
    java.lang.Object ref = profile_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      profile_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Enforce specified codec profile. The default is `"high"`.
   * Supported codec profiles:
   * - 'baseline'
   * - 'main'
   * - 'high'
   * </pre>
   *
   * <code>string profile = 2;</code>
   *
   * @return The bytes for profile.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getProfileBytes() {
    java.lang.Object ref = profile_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      profile_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TUNE_FIELD_NUMBER = 3;
  private volatile java.lang.Object tune_;
  /**
   *
   *
   * <pre>
   * Enforce specified codec tune.
   * </pre>
   *
   * <code>string tune = 3;</code>
   *
   * @return The tune.
   */
  @java.lang.Override
  public java.lang.String getTune() {
    java.lang.Object ref = tune_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tune_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Enforce specified codec tune.
   * </pre>
   *
   * <code>string tune = 3;</code>
   *
   * @return The bytes for tune.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTuneBytes() {
    java.lang.Object ref = tune_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      tune_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRESET_FIELD_NUMBER = 4;
  private volatile java.lang.Object preset_;
  /**
   *
   *
   * <pre>
   * Enforce specified codec preset. The default is `"veryfast"`.
   * </pre>
   *
   * <code>string preset = 4;</code>
   *
   * @return The preset.
   */
  @java.lang.Override
  public java.lang.String getPreset() {
    java.lang.Object ref = preset_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      preset_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Enforce specified codec preset. The default is `"veryfast"`.
   * </pre>
   *
   * <code>string preset = 4;</code>
   *
   * @return The bytes for preset.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPresetBytes() {
    java.lang.Object ref = preset_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      preset_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HEIGHT_PIXELS_FIELD_NUMBER = 5;
  private int heightPixels_;
  /**
   *
   *
   * <pre>
   * The height of the video in pixels. Must be an even integer.
   * When not specified, the height is adjusted to match the specified width and
   * input aspect ratio. If both are omitted, the input height is used.
   * </pre>
   *
   * <code>int32 height_pixels = 5;</code>
   *
   * @return The heightPixels.
   */
  @java.lang.Override
  public int getHeightPixels() {
    return heightPixels_;
  }

  public static final int WIDTH_PIXELS_FIELD_NUMBER = 6;
  private int widthPixels_;
  /**
   *
   *
   * <pre>
   * The width of the video in pixels. Must be an even integer.
   * When not specified, the width is adjusted to match the specified height and
   * input aspect ratio. If both are omitted, the input width is used.
   * </pre>
   *
   * <code>int32 width_pixels = 6;</code>
   *
   * @return The widthPixels.
   */
  @java.lang.Override
  public int getWidthPixels() {
    return widthPixels_;
  }

  public static final int PIXEL_FORMAT_FIELD_NUMBER = 7;
  private volatile java.lang.Object pixelFormat_;
  /**
   *
   *
   * <pre>
   * Pixel format to use. The default is `"yuv420p"`.
   * Supported pixel formats:
   * - 'yuv420p' pixel format.
   * - 'yuv422p' pixel format.
   * - 'yuv444p' pixel format.
   * - 'yuv420p10' 10-bit HDR pixel format.
   * - 'yuv422p10' 10-bit HDR pixel format.
   * - 'yuv444p10' 10-bit HDR pixel format.
   * - 'yuv420p12' 12-bit HDR pixel format.
   * - 'yuv422p12' 12-bit HDR pixel format.
   * - 'yuv444p12' 12-bit HDR pixel format.
   * </pre>
   *
   * <code>string pixel_format = 7;</code>
   *
   * @return The pixelFormat.
   */
  @java.lang.Override
  public java.lang.String getPixelFormat() {
    java.lang.Object ref = pixelFormat_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pixelFormat_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Pixel format to use. The default is `"yuv420p"`.
   * Supported pixel formats:
   * - 'yuv420p' pixel format.
   * - 'yuv422p' pixel format.
   * - 'yuv444p' pixel format.
   * - 'yuv420p10' 10-bit HDR pixel format.
   * - 'yuv422p10' 10-bit HDR pixel format.
   * - 'yuv444p10' 10-bit HDR pixel format.
   * - 'yuv420p12' 12-bit HDR pixel format.
   * - 'yuv422p12' 12-bit HDR pixel format.
   * - 'yuv444p12' 12-bit HDR pixel format.
   * </pre>
   *
   * <code>string pixel_format = 7;</code>
   *
   * @return The bytes for pixelFormat.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPixelFormatBytes() {
    java.lang.Object ref = pixelFormat_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      pixelFormat_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BITRATE_BPS_FIELD_NUMBER = 8;
  private int bitrateBps_;
  /**
   *
   *
   * <pre>
   * Required. The video bitrate in bits per second. Must be between 1 and 1,000,000,000.
   * </pre>
   *
   * <code>int32 bitrate_bps = 8 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bitrateBps.
   */
  @java.lang.Override
  public int getBitrateBps() {
    return bitrateBps_;
  }

  public static final int RATE_CONTROL_MODE_FIELD_NUMBER = 9;
  private volatile java.lang.Object rateControlMode_;
  /**
   *
   *
   * <pre>
   * Specify the `rate_control_mode`. The default is `"vbr"`.
   * Supported rate control modes:
   * - 'vbr' - variable bitrate
   * - 'crf' - constant rate factor
   * </pre>
   *
   * <code>string rate_control_mode = 9;</code>
   *
   * @return The rateControlMode.
   */
  @java.lang.Override
  public java.lang.String getRateControlMode() {
    java.lang.Object ref = rateControlMode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      rateControlMode_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Specify the `rate_control_mode`. The default is `"vbr"`.
   * Supported rate control modes:
   * - 'vbr' - variable bitrate
   * - 'crf' - constant rate factor
   * </pre>
   *
   * <code>string rate_control_mode = 9;</code>
   *
   * @return The bytes for rateControlMode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getRateControlModeBytes() {
    java.lang.Object ref = rateControlMode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      rateControlMode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENABLE_TWO_PASS_FIELD_NUMBER = 10;
  private boolean enableTwoPass_;
  /**
   *
   *
   * <pre>
   * Use two-pass encoding strategy to achieve better video quality.
   * `VideoStream.rate_control_mode` must be `"vbr"`. The default is `false`.
   * </pre>
   *
   * <code>bool enable_two_pass = 10;</code>
   *
   * @return The enableTwoPass.
   */
  @java.lang.Override
  public boolean getEnableTwoPass() {
    return enableTwoPass_;
  }

  public static final int CRF_LEVEL_FIELD_NUMBER = 11;
  private int crfLevel_;
  /**
   *
   *
   * <pre>
   * Target CRF level. Must be between 10 and 36, where 10 is the highest
   * quality and 36 is the most efficient compression. The default is 21.
   * </pre>
   *
   * <code>int32 crf_level = 11;</code>
   *
   * @return The crfLevel.
   */
  @java.lang.Override
  public int getCrfLevel() {
    return crfLevel_;
  }

  public static final int VBV_SIZE_BITS_FIELD_NUMBER = 12;
  private int vbvSizeBits_;
  /**
   *
   *
   * <pre>
   * Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater
   * than zero. The default is equal to `VideoStream.bitrate_bps`.
   * </pre>
   *
   * <code>int32 vbv_size_bits = 12;</code>
   *
   * @return The vbvSizeBits.
   */
  @java.lang.Override
  public int getVbvSizeBits() {
    return vbvSizeBits_;
  }

  public static final int VBV_FULLNESS_BITS_FIELD_NUMBER = 13;
  private int vbvFullnessBits_;
  /**
   *
   *
   * <pre>
   * Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must
   * be greater than zero. The default is equal to 90% of
   * `VideoStream.vbv_size_bits`.
   * </pre>
   *
   * <code>int32 vbv_fullness_bits = 13;</code>
   *
   * @return The vbvFullnessBits.
   */
  @java.lang.Override
  public int getVbvFullnessBits() {
    return vbvFullnessBits_;
  }

  public static final int ALLOW_OPEN_GOP_FIELD_NUMBER = 14;
  private boolean allowOpenGop_;
  /**
   *
   *
   * <pre>
   * Specifies whether an open Group of Pictures (GOP) structure should be
   * allowed or not. The default is `false`.
   * </pre>
   *
   * <code>bool allow_open_gop = 14;</code>
   *
   * @return The allowOpenGop.
   */
  @java.lang.Override
  public boolean getAllowOpenGop() {
    return allowOpenGop_;
  }

  public static final int GOP_FRAME_COUNT_FIELD_NUMBER = 15;
  /**
   *
   *
   * <pre>
   * Select the GOP size based on the specified frame count. Must be greater
   * than zero.
   * </pre>
   *
   * <code>int32 gop_frame_count = 15;</code>
   *
   * @return The gopFrameCount.
   */
  @java.lang.Override
  public int getGopFrameCount() {
    if (gopModeCase_ == 15) {
      return (java.lang.Integer) gopMode_;
    }
    return 0;
  }

  public static final int GOP_DURATION_FIELD_NUMBER = 16;
  /**
   *
   *
   * <pre>
   * Select the GOP size based on the specified duration. The default is
   * `"3s"`.
   * </pre>
   *
   * <code>.google.protobuf.Duration gop_duration = 16;</code>
   *
   * @return Whether the gopDuration field is set.
   */
  @java.lang.Override
  public boolean hasGopDuration() {
    return gopModeCase_ == 16;
  }
  /**
   *
   *
   * <pre>
   * Select the GOP size based on the specified duration. The default is
   * `"3s"`.
   * </pre>
   *
   * <code>.google.protobuf.Duration gop_duration = 16;</code>
   *
   * @return The gopDuration.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getGopDuration() {
    if (gopModeCase_ == 16) {
      return (com.google.protobuf.Duration) gopMode_;
    }
    return com.google.protobuf.Duration.getDefaultInstance();
  }
  /**
   *
   *
   * <pre>
   * Select the GOP size based on the specified duration. The default is
   * `"3s"`.
   * </pre>
   *
   * <code>.google.protobuf.Duration gop_duration = 16;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getGopDurationOrBuilder() {
    if (gopModeCase_ == 16) {
      return (com.google.protobuf.Duration) gopMode_;
    }
    return com.google.protobuf.Duration.getDefaultInstance();
  }

  public static final int ENTROPY_CODER_FIELD_NUMBER = 17;
  private volatile java.lang.Object entropyCoder_;
  /**
   *
   *
   * <pre>
   * The entropy coder to use. The default is `"cabac"`.
   * Supported entropy coders:
   * - 'cavlc'
   * - 'cabac'
   * </pre>
   *
   * <code>string entropy_coder = 17;</code>
   *
   * @return The entropyCoder.
   */
  @java.lang.Override
  public java.lang.String getEntropyCoder() {
    java.lang.Object ref = entropyCoder_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      entropyCoder_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The entropy coder to use. The default is `"cabac"`.
   * Supported entropy coders:
   * - 'cavlc'
   * - 'cabac'
   * </pre>
   *
   * <code>string entropy_coder = 17;</code>
   *
   * @return The bytes for entropyCoder.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getEntropyCoderBytes() {
    java.lang.Object ref = entropyCoder_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      entropyCoder_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int B_PYRAMID_FIELD_NUMBER = 18;
  private boolean bPyramid_;
  /**
   *
   *
   * <pre>
   * Allow B-pyramid for reference frame selection. This may not be supported
   * on all decoders. The default is `false`.
   * </pre>
   *
   * <code>bool b_pyramid = 18;</code>
   *
   * @return The bPyramid.
   */
  @java.lang.Override
  public boolean getBPyramid() {
    return bPyramid_;
  }

  public static final int B_FRAME_COUNT_FIELD_NUMBER = 19;
  private int bFrameCount_;
  /**
   *
   *
   * <pre>
   * The number of consecutive B-frames. Must be greater than or equal to zero.
   * Must be less than `VideoStream.gop_frame_count` if set. The default is 0.
   * </pre>
   *
   * <code>int32 b_frame_count = 19;</code>
   *
   * @return The bFrameCount.
   */
  @java.lang.Override
  public int getBFrameCount() {
    return bFrameCount_;
  }

  public static final int FRAME_RATE_FIELD_NUMBER = 20;
  private double frameRate_;
  /**
   *
   *
   * <pre>
   * Required. The target video frame rate in frames per second (FPS). Must be less than
   * or equal to 120. Will default to the input frame rate if larger than the
   * input frame rate. The API will generate an output FPS that is divisible by
   * the input FPS, and smaller or equal to the target FPS.
   * The following table shows the computed video FPS given the target FPS (in
   * parenthesis) and input FPS (in the first column):
   * ```
   * |        | (30)   | (60)   | (25) | (50) |
   * |--------|--------|--------|------|------|
   * | 240    | Fail   | Fail   | Fail | Fail |
   * | 120    | 30     | 60     | 20   | 30   |
   * | 100    | 25     | 50     | 20   | 30   |
   * | 50     | 25     | 50     | 20   | 30   |
   * | 60     | 30     | 60     | 20   | 30   |
   * | 59.94  | 29.97  | 59.94  | 20   | 30   |
   * | 48     | 24     | 48     | 20   | 30   |
   * | 30     | 30     | 30     | 20   | 30   |
   * | 25     | 25     | 25     | 20   | 30   |
   * | 24     | 24     | 24     | 20   | 30   |
   * | 23.976 | 23.976 | 23.976 | 20   | 30   |
   * | 15     | 15     | 15     | 20   | 30   |
   * | 12     | 12     | 12     | 20   | 30   |
   * | 10     | 10     | 10     | 20   | 30   |
   * ```
   * </pre>
   *
   * <code>double frame_rate = 20 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The frameRate.
   */
  @java.lang.Override
  public double getFrameRate() {
    return frameRate_;
  }

  public static final int AQ_STRENGTH_FIELD_NUMBER = 21;
  private double aqStrength_;
  /**
   *
   *
   * <pre>
   * Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and
   * 1, where 0 disables the quantizer and 1 maximizes the quantizer. A
   * higher value equals a lower bitrate but smoother image. The default is 0.
   * </pre>
   *
   * <code>double aq_strength = 21;</code>
   *
   * @return The aqStrength.
   */
  @java.lang.Override
  public double getAqStrength() {
    return aqStrength_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getCodecBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, codec_);
    }
    if (!getProfileBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, profile_);
    }
    if (!getTuneBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tune_);
    }
    if (!getPresetBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, preset_);
    }
    if (heightPixels_ != 0) {
      output.writeInt32(5, heightPixels_);
    }
    if (widthPixels_ != 0) {
      output.writeInt32(6, widthPixels_);
    }
    if (!getPixelFormatBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, pixelFormat_);
    }
    if (bitrateBps_ != 0) {
      output.writeInt32(8, bitrateBps_);
    }
    if (!getRateControlModeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, rateControlMode_);
    }
    if (enableTwoPass_ != false) {
      output.writeBool(10, enableTwoPass_);
    }
    if (crfLevel_ != 0) {
      output.writeInt32(11, crfLevel_);
    }
    if (vbvSizeBits_ != 0) {
      output.writeInt32(12, vbvSizeBits_);
    }
    if (vbvFullnessBits_ != 0) {
      output.writeInt32(13, vbvFullnessBits_);
    }
    if (allowOpenGop_ != false) {
      output.writeBool(14, allowOpenGop_);
    }
    if (gopModeCase_ == 15) {
      output.writeInt32(15, (int) ((java.lang.Integer) gopMode_));
    }
    if (gopModeCase_ == 16) {
      output.writeMessage(16, (com.google.protobuf.Duration) gopMode_);
    }
    if (!getEntropyCoderBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 17, entropyCoder_);
    }
    if (bPyramid_ != false) {
      output.writeBool(18, bPyramid_);
    }
    if (bFrameCount_ != 0) {
      output.writeInt32(19, bFrameCount_);
    }
    if (frameRate_ != 0D) {
      output.writeDouble(20, frameRate_);
    }
    if (aqStrength_ != 0D) {
      output.writeDouble(21, aqStrength_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getCodecBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, codec_);
    }
    if (!getProfileBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, profile_);
    }
    if (!getTuneBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, tune_);
    }
    if (!getPresetBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, preset_);
    }
    if (heightPixels_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(5, heightPixels_);
    }
    if (widthPixels_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(6, widthPixels_);
    }
    if (!getPixelFormatBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, pixelFormat_);
    }
    if (bitrateBps_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(8, bitrateBps_);
    }
    if (!getRateControlModeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, rateControlMode_);
    }
    if (enableTwoPass_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(10, enableTwoPass_);
    }
    if (crfLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(11, crfLevel_);
    }
    if (vbvSizeBits_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(12, vbvSizeBits_);
    }
    if (vbvFullnessBits_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(13, vbvFullnessBits_);
    }
    if (allowOpenGop_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(14, allowOpenGop_);
    }
    if (gopModeCase_ == 15) {
      size +=
          com.google.protobuf.CodedOutputStream.computeInt32Size(
              15, (int) ((java.lang.Integer) gopMode_));
    }
    if (gopModeCase_ == 16) {
      size +=
          com.google.protobuf.CodedOutputStream.computeMessageSize(
              16, (com.google.protobuf.Duration) gopMode_);
    }
    if (!getEntropyCoderBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, entropyCoder_);
    }
    if (bPyramid_ != false) {
      size += com.google.protobuf.CodedOutputStream.computeBoolSize(18, bPyramid_);
    }
    if (bFrameCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(19, bFrameCount_);
    }
    if (frameRate_ != 0D) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(20, frameRate_);
    }
    if (aqStrength_ != 0D) {
      size += com.google.protobuf.CodedOutputStream.computeDoubleSize(21, aqStrength_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.video.transcoder.v1beta1.VideoStream)) {
      return super.equals(obj);
    }
    com.google.cloud.video.transcoder.v1beta1.VideoStream other =
        (com.google.cloud.video.transcoder.v1beta1.VideoStream) obj;

    if (!getCodec().equals(other.getCodec())) return false;
    if (!getProfile().equals(other.getProfile())) return false;
    if (!getTune().equals(other.getTune())) return false;
    if (!getPreset().equals(other.getPreset())) return false;
    if (getHeightPixels() != other.getHeightPixels()) return false;
    if (getWidthPixels() != other.getWidthPixels()) return false;
    if (!getPixelFormat().equals(other.getPixelFormat())) return false;
    if (getBitrateBps() != other.getBitrateBps()) return false;
    if (!getRateControlMode().equals(other.getRateControlMode())) return false;
    if (getEnableTwoPass() != other.getEnableTwoPass()) return false;
    if (getCrfLevel() != other.getCrfLevel()) return false;
    if (getVbvSizeBits() != other.getVbvSizeBits()) return false;
    if (getVbvFullnessBits() != other.getVbvFullnessBits()) return false;
    if (getAllowOpenGop() != other.getAllowOpenGop()) return false;
    if (!getEntropyCoder().equals(other.getEntropyCoder())) return false;
    if (getBPyramid() != other.getBPyramid()) return false;
    if (getBFrameCount() != other.getBFrameCount()) return false;
    if (java.lang.Double.doubleToLongBits(getFrameRate())
        != java.lang.Double.doubleToLongBits(other.getFrameRate())) return false;
    if (java.lang.Double.doubleToLongBits(getAqStrength())
        != java.lang.Double.doubleToLongBits(other.getAqStrength())) return false;
    if (!getGopModeCase().equals(other.getGopModeCase())) return false;
    switch (gopModeCase_) {
      case 15:
        if (getGopFrameCount() != other.getGopFrameCount()) return false;
        break;
      case 16:
        if (!getGopDuration().equals(other.getGopDuration())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CODEC_FIELD_NUMBER;
    hash = (53 * hash) + getCodec().hashCode();
    hash = (37 * hash) + PROFILE_FIELD_NUMBER;
    hash = (53 * hash) + getProfile().hashCode();
    hash = (37 * hash) + TUNE_FIELD_NUMBER;
    hash = (53 * hash) + getTune().hashCode();
    hash = (37 * hash) + PRESET_FIELD_NUMBER;
    hash = (53 * hash) + getPreset().hashCode();
    hash = (37 * hash) + HEIGHT_PIXELS_FIELD_NUMBER;
    hash = (53 * hash) + getHeightPixels();
    hash = (37 * hash) + WIDTH_PIXELS_FIELD_NUMBER;
    hash = (53 * hash) + getWidthPixels();
    hash = (37 * hash) + PIXEL_FORMAT_FIELD_NUMBER;
    hash = (53 * hash) + getPixelFormat().hashCode();
    hash = (37 * hash) + BITRATE_BPS_FIELD_NUMBER;
    hash = (53 * hash) + getBitrateBps();
    hash = (37 * hash) + RATE_CONTROL_MODE_FIELD_NUMBER;
    hash = (53 * hash) + getRateControlMode().hashCode();
    hash = (37 * hash) + ENABLE_TWO_PASS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getEnableTwoPass());
    hash = (37 * hash) + CRF_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getCrfLevel();
    hash = (37 * hash) + VBV_SIZE_BITS_FIELD_NUMBER;
    hash = (53 * hash) + getVbvSizeBits();
    hash = (37 * hash) + VBV_FULLNESS_BITS_FIELD_NUMBER;
    hash = (53 * hash) + getVbvFullnessBits();
    hash = (37 * hash) + ALLOW_OPEN_GOP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getAllowOpenGop());
    hash = (37 * hash) + ENTROPY_CODER_FIELD_NUMBER;
    hash = (53 * hash) + getEntropyCoder().hashCode();
    hash = (37 * hash) + B_PYRAMID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(getBPyramid());
    hash = (37 * hash) + B_FRAME_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getBFrameCount();
    hash = (37 * hash) + FRAME_RATE_FIELD_NUMBER;
    hash =
        (53 * hash)
            + com.google.protobuf.Internal.hashLong(
                java.lang.Double.doubleToLongBits(getFrameRate()));
    hash = (37 * hash) + AQ_STRENGTH_FIELD_NUMBER;
    hash =
        (53 * hash)
            + com.google.protobuf.Internal.hashLong(
                java.lang.Double.doubleToLongBits(getAqStrength()));
    switch (gopModeCase_) {
      case 15:
        hash = (37 * hash) + GOP_FRAME_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getGopFrameCount();
        break;
      case 16:
        hash = (37 * hash) + GOP_DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getGopDuration().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.video.transcoder.v1beta1.VideoStream prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Video stream resource.
   * </pre>
   *
   * Protobuf type {@code google.cloud.video.transcoder.v1beta1.VideoStream}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.video.transcoder.v1beta1.VideoStream)
      com.google.cloud.video.transcoder.v1beta1.VideoStreamOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
          .internal_static_google_cloud_video_transcoder_v1beta1_VideoStream_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
          .internal_static_google_cloud_video_transcoder_v1beta1_VideoStream_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.video.transcoder.v1beta1.VideoStream.class,
              com.google.cloud.video.transcoder.v1beta1.VideoStream.Builder.class);
    }

    // Construct using com.google.cloud.video.transcoder.v1beta1.VideoStream.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      codec_ = "";

      profile_ = "";

      tune_ = "";

      preset_ = "";

      heightPixels_ = 0;

      widthPixels_ = 0;

      pixelFormat_ = "";

      bitrateBps_ = 0;

      rateControlMode_ = "";

      enableTwoPass_ = false;

      crfLevel_ = 0;

      vbvSizeBits_ = 0;

      vbvFullnessBits_ = 0;

      allowOpenGop_ = false;

      entropyCoder_ = "";

      bPyramid_ = false;

      bFrameCount_ = 0;

      frameRate_ = 0D;

      aqStrength_ = 0D;

      gopModeCase_ = 0;
      gopMode_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
          .internal_static_google_cloud_video_transcoder_v1beta1_VideoStream_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.video.transcoder.v1beta1.VideoStream getDefaultInstanceForType() {
      return com.google.cloud.video.transcoder.v1beta1.VideoStream.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.video.transcoder.v1beta1.VideoStream build() {
      com.google.cloud.video.transcoder.v1beta1.VideoStream result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.video.transcoder.v1beta1.VideoStream buildPartial() {
      com.google.cloud.video.transcoder.v1beta1.VideoStream result =
          new com.google.cloud.video.transcoder.v1beta1.VideoStream(this);
      result.codec_ = codec_;
      result.profile_ = profile_;
      result.tune_ = tune_;
      result.preset_ = preset_;
      result.heightPixels_ = heightPixels_;
      result.widthPixels_ = widthPixels_;
      result.pixelFormat_ = pixelFormat_;
      result.bitrateBps_ = bitrateBps_;
      result.rateControlMode_ = rateControlMode_;
      result.enableTwoPass_ = enableTwoPass_;
      result.crfLevel_ = crfLevel_;
      result.vbvSizeBits_ = vbvSizeBits_;
      result.vbvFullnessBits_ = vbvFullnessBits_;
      result.allowOpenGop_ = allowOpenGop_;
      if (gopModeCase_ == 15) {
        result.gopMode_ = gopMode_;
      }
      if (gopModeCase_ == 16) {
        if (gopDurationBuilder_ == null) {
          result.gopMode_ = gopMode_;
        } else {
          result.gopMode_ = gopDurationBuilder_.build();
        }
      }
      result.entropyCoder_ = entropyCoder_;
      result.bPyramid_ = bPyramid_;
      result.bFrameCount_ = bFrameCount_;
      result.frameRate_ = frameRate_;
      result.aqStrength_ = aqStrength_;
      result.gopModeCase_ = gopModeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.video.transcoder.v1beta1.VideoStream) {
        return mergeFrom((com.google.cloud.video.transcoder.v1beta1.VideoStream) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.video.transcoder.v1beta1.VideoStream other) {
      if (other == com.google.cloud.video.transcoder.v1beta1.VideoStream.getDefaultInstance())
        return this;
      if (!other.getCodec().isEmpty()) {
        codec_ = other.codec_;
        onChanged();
      }
      if (!other.getProfile().isEmpty()) {
        profile_ = other.profile_;
        onChanged();
      }
      if (!other.getTune().isEmpty()) {
        tune_ = other.tune_;
        onChanged();
      }
      if (!other.getPreset().isEmpty()) {
        preset_ = other.preset_;
        onChanged();
      }
      if (other.getHeightPixels() != 0) {
        setHeightPixels(other.getHeightPixels());
      }
      if (other.getWidthPixels() != 0) {
        setWidthPixels(other.getWidthPixels());
      }
      if (!other.getPixelFormat().isEmpty()) {
        pixelFormat_ = other.pixelFormat_;
        onChanged();
      }
      if (other.getBitrateBps() != 0) {
        setBitrateBps(other.getBitrateBps());
      }
      if (!other.getRateControlMode().isEmpty()) {
        rateControlMode_ = other.rateControlMode_;
        onChanged();
      }
      if (other.getEnableTwoPass() != false) {
        setEnableTwoPass(other.getEnableTwoPass());
      }
      if (other.getCrfLevel() != 0) {
        setCrfLevel(other.getCrfLevel());
      }
      if (other.getVbvSizeBits() != 0) {
        setVbvSizeBits(other.getVbvSizeBits());
      }
      if (other.getVbvFullnessBits() != 0) {
        setVbvFullnessBits(other.getVbvFullnessBits());
      }
      if (other.getAllowOpenGop() != false) {
        setAllowOpenGop(other.getAllowOpenGop());
      }
      if (!other.getEntropyCoder().isEmpty()) {
        entropyCoder_ = other.entropyCoder_;
        onChanged();
      }
      if (other.getBPyramid() != false) {
        setBPyramid(other.getBPyramid());
      }
      if (other.getBFrameCount() != 0) {
        setBFrameCount(other.getBFrameCount());
      }
      if (other.getFrameRate() != 0D) {
        setFrameRate(other.getFrameRate());
      }
      if (other.getAqStrength() != 0D) {
        setAqStrength(other.getAqStrength());
      }
      switch (other.getGopModeCase()) {
        case GOP_FRAME_COUNT:
          {
            setGopFrameCount(other.getGopFrameCount());
            break;
          }
        case GOP_DURATION:
          {
            mergeGopDuration(other.getGopDuration());
            break;
          }
        case GOPMODE_NOT_SET:
          {
            break;
          }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.video.transcoder.v1beta1.VideoStream parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage =
            (com.google.cloud.video.transcoder.v1beta1.VideoStream) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int gopModeCase_ = 0;
    private java.lang.Object gopMode_;

    public GopModeCase getGopModeCase() {
      return GopModeCase.forNumber(gopModeCase_);
    }

    public Builder clearGopMode() {
      gopModeCase_ = 0;
      gopMode_ = null;
      onChanged();
      return this;
    }

    private java.lang.Object codec_ = "";
    /**
     *
     *
     * <pre>
     * Codec type. The default is `"h264"`.
     * Supported codecs:
     * - 'h264'
     * - 'h265'
     * - 'vp9'
     * </pre>
     *
     * <code>string codec = 1;</code>
     *
     * @return The codec.
     */
    public java.lang.String getCodec() {
      java.lang.Object ref = codec_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        codec_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Codec type. The default is `"h264"`.
     * Supported codecs:
     * - 'h264'
     * - 'h265'
     * - 'vp9'
     * </pre>
     *
     * <code>string codec = 1;</code>
     *
     * @return The bytes for codec.
     */
    public com.google.protobuf.ByteString getCodecBytes() {
      java.lang.Object ref = codec_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        codec_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Codec type. The default is `"h264"`.
     * Supported codecs:
     * - 'h264'
     * - 'h265'
     * - 'vp9'
     * </pre>
     *
     * <code>string codec = 1;</code>
     *
     * @param value The codec to set.
     * @return This builder for chaining.
     */
    public Builder setCodec(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      codec_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Codec type. The default is `"h264"`.
     * Supported codecs:
     * - 'h264'
     * - 'h265'
     * - 'vp9'
     * </pre>
     *
     * <code>string codec = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCodec() {

      codec_ = getDefaultInstance().getCodec();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Codec type. The default is `"h264"`.
     * Supported codecs:
     * - 'h264'
     * - 'h265'
     * - 'vp9'
     * </pre>
     *
     * <code>string codec = 1;</code>
     *
     * @param value The bytes for codec to set.
     * @return This builder for chaining.
     */
    public Builder setCodecBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      codec_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object profile_ = "";
    /**
     *
     *
     * <pre>
     * Enforce specified codec profile. The default is `"high"`.
     * Supported codec profiles:
     * - 'baseline'
     * - 'main'
     * - 'high'
     * </pre>
     *
     * <code>string profile = 2;</code>
     *
     * @return The profile.
     */
    public java.lang.String getProfile() {
      java.lang.Object ref = profile_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        profile_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec profile. The default is `"high"`.
     * Supported codec profiles:
     * - 'baseline'
     * - 'main'
     * - 'high'
     * </pre>
     *
     * <code>string profile = 2;</code>
     *
     * @return The bytes for profile.
     */
    public com.google.protobuf.ByteString getProfileBytes() {
      java.lang.Object ref = profile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        profile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec profile. The default is `"high"`.
     * Supported codec profiles:
     * - 'baseline'
     * - 'main'
     * - 'high'
     * </pre>
     *
     * <code>string profile = 2;</code>
     *
     * @param value The profile to set.
     * @return This builder for chaining.
     */
    public Builder setProfile(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      profile_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec profile. The default is `"high"`.
     * Supported codec profiles:
     * - 'baseline'
     * - 'main'
     * - 'high'
     * </pre>
     *
     * <code>string profile = 2;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearProfile() {

      profile_ = getDefaultInstance().getProfile();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec profile. The default is `"high"`.
     * Supported codec profiles:
     * - 'baseline'
     * - 'main'
     * - 'high'
     * </pre>
     *
     * <code>string profile = 2;</code>
     *
     * @param value The bytes for profile to set.
     * @return This builder for chaining.
     */
    public Builder setProfileBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      profile_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object tune_ = "";
    /**
     *
     *
     * <pre>
     * Enforce specified codec tune.
     * </pre>
     *
     * <code>string tune = 3;</code>
     *
     * @return The tune.
     */
    public java.lang.String getTune() {
      java.lang.Object ref = tune_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tune_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec tune.
     * </pre>
     *
     * <code>string tune = 3;</code>
     *
     * @return The bytes for tune.
     */
    public com.google.protobuf.ByteString getTuneBytes() {
      java.lang.Object ref = tune_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        tune_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec tune.
     * </pre>
     *
     * <code>string tune = 3;</code>
     *
     * @param value The tune to set.
     * @return This builder for chaining.
     */
    public Builder setTune(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      tune_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec tune.
     * </pre>
     *
     * <code>string tune = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearTune() {

      tune_ = getDefaultInstance().getTune();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec tune.
     * </pre>
     *
     * <code>string tune = 3;</code>
     *
     * @param value The bytes for tune to set.
     * @return This builder for chaining.
     */
    public Builder setTuneBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      tune_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object preset_ = "";
    /**
     *
     *
     * <pre>
     * Enforce specified codec preset. The default is `"veryfast"`.
     * </pre>
     *
     * <code>string preset = 4;</code>
     *
     * @return The preset.
     */
    public java.lang.String getPreset() {
      java.lang.Object ref = preset_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        preset_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec preset. The default is `"veryfast"`.
     * </pre>
     *
     * <code>string preset = 4;</code>
     *
     * @return The bytes for preset.
     */
    public com.google.protobuf.ByteString getPresetBytes() {
      java.lang.Object ref = preset_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        preset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec preset. The default is `"veryfast"`.
     * </pre>
     *
     * <code>string preset = 4;</code>
     *
     * @param value The preset to set.
     * @return This builder for chaining.
     */
    public Builder setPreset(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      preset_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec preset. The default is `"veryfast"`.
     * </pre>
     *
     * <code>string preset = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPreset() {

      preset_ = getDefaultInstance().getPreset();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Enforce specified codec preset. The default is `"veryfast"`.
     * </pre>
     *
     * <code>string preset = 4;</code>
     *
     * @param value The bytes for preset to set.
     * @return This builder for chaining.
     */
    public Builder setPresetBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      preset_ = value;
      onChanged();
      return this;
    }

    private int heightPixels_;
    /**
     *
     *
     * <pre>
     * The height of the video in pixels. Must be an even integer.
     * When not specified, the height is adjusted to match the specified width and
     * input aspect ratio. If both are omitted, the input height is used.
     * </pre>
     *
     * <code>int32 height_pixels = 5;</code>
     *
     * @return The heightPixels.
     */
    @java.lang.Override
    public int getHeightPixels() {
      return heightPixels_;
    }
    /**
     *
     *
     * <pre>
     * The height of the video in pixels. Must be an even integer.
     * When not specified, the height is adjusted to match the specified width and
     * input aspect ratio. If both are omitted, the input height is used.
     * </pre>
     *
     * <code>int32 height_pixels = 5;</code>
     *
     * @param value The heightPixels to set.
     * @return This builder for chaining.
     */
    public Builder setHeightPixels(int value) {

      heightPixels_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The height of the video in pixels. Must be an even integer.
     * When not specified, the height is adjusted to match the specified width and
     * input aspect ratio. If both are omitted, the input height is used.
     * </pre>
     *
     * <code>int32 height_pixels = 5;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearHeightPixels() {

      heightPixels_ = 0;
      onChanged();
      return this;
    }

    private int widthPixels_;
    /**
     *
     *
     * <pre>
     * The width of the video in pixels. Must be an even integer.
     * When not specified, the width is adjusted to match the specified height and
     * input aspect ratio. If both are omitted, the input width is used.
     * </pre>
     *
     * <code>int32 width_pixels = 6;</code>
     *
     * @return The widthPixels.
     */
    @java.lang.Override
    public int getWidthPixels() {
      return widthPixels_;
    }
    /**
     *
     *
     * <pre>
     * The width of the video in pixels. Must be an even integer.
     * When not specified, the width is adjusted to match the specified height and
     * input aspect ratio. If both are omitted, the input width is used.
     * </pre>
     *
     * <code>int32 width_pixels = 6;</code>
     *
     * @param value The widthPixels to set.
     * @return This builder for chaining.
     */
    public Builder setWidthPixels(int value) {

      widthPixels_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The width of the video in pixels. Must be an even integer.
     * When not specified, the width is adjusted to match the specified height and
     * input aspect ratio. If both are omitted, the input width is used.
     * </pre>
     *
     * <code>int32 width_pixels = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearWidthPixels() {

      widthPixels_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object pixelFormat_ = "";
    /**
     *
     *
     * <pre>
     * Pixel format to use. The default is `"yuv420p"`.
     * Supported pixel formats:
     * - 'yuv420p' pixel format.
     * - 'yuv422p' pixel format.
     * - 'yuv444p' pixel format.
     * - 'yuv420p10' 10-bit HDR pixel format.
     * - 'yuv422p10' 10-bit HDR pixel format.
     * - 'yuv444p10' 10-bit HDR pixel format.
     * - 'yuv420p12' 12-bit HDR pixel format.
     * - 'yuv422p12' 12-bit HDR pixel format.
     * - 'yuv444p12' 12-bit HDR pixel format.
     * </pre>
     *
     * <code>string pixel_format = 7;</code>
     *
     * @return The pixelFormat.
     */
    public java.lang.String getPixelFormat() {
      java.lang.Object ref = pixelFormat_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pixelFormat_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Pixel format to use. The default is `"yuv420p"`.
     * Supported pixel formats:
     * - 'yuv420p' pixel format.
     * - 'yuv422p' pixel format.
     * - 'yuv444p' pixel format.
     * - 'yuv420p10' 10-bit HDR pixel format.
     * - 'yuv422p10' 10-bit HDR pixel format.
     * - 'yuv444p10' 10-bit HDR pixel format.
     * - 'yuv420p12' 12-bit HDR pixel format.
     * - 'yuv422p12' 12-bit HDR pixel format.
     * - 'yuv444p12' 12-bit HDR pixel format.
     * </pre>
     *
     * <code>string pixel_format = 7;</code>
     *
     * @return The bytes for pixelFormat.
     */
    public com.google.protobuf.ByteString getPixelFormatBytes() {
      java.lang.Object ref = pixelFormat_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        pixelFormat_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Pixel format to use. The default is `"yuv420p"`.
     * Supported pixel formats:
     * - 'yuv420p' pixel format.
     * - 'yuv422p' pixel format.
     * - 'yuv444p' pixel format.
     * - 'yuv420p10' 10-bit HDR pixel format.
     * - 'yuv422p10' 10-bit HDR pixel format.
     * - 'yuv444p10' 10-bit HDR pixel format.
     * - 'yuv420p12' 12-bit HDR pixel format.
     * - 'yuv422p12' 12-bit HDR pixel format.
     * - 'yuv444p12' 12-bit HDR pixel format.
     * </pre>
     *
     * <code>string pixel_format = 7;</code>
     *
     * @param value The pixelFormat to set.
     * @return This builder for chaining.
     */
    public Builder setPixelFormat(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      pixelFormat_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Pixel format to use. The default is `"yuv420p"`.
     * Supported pixel formats:
     * - 'yuv420p' pixel format.
     * - 'yuv422p' pixel format.
     * - 'yuv444p' pixel format.
     * - 'yuv420p10' 10-bit HDR pixel format.
     * - 'yuv422p10' 10-bit HDR pixel format.
     * - 'yuv444p10' 10-bit HDR pixel format.
     * - 'yuv420p12' 12-bit HDR pixel format.
     * - 'yuv422p12' 12-bit HDR pixel format.
     * - 'yuv444p12' 12-bit HDR pixel format.
     * </pre>
     *
     * <code>string pixel_format = 7;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearPixelFormat() {

      pixelFormat_ = getDefaultInstance().getPixelFormat();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Pixel format to use. The default is `"yuv420p"`.
     * Supported pixel formats:
     * - 'yuv420p' pixel format.
     * - 'yuv422p' pixel format.
     * - 'yuv444p' pixel format.
     * - 'yuv420p10' 10-bit HDR pixel format.
     * - 'yuv422p10' 10-bit HDR pixel format.
     * - 'yuv444p10' 10-bit HDR pixel format.
     * - 'yuv420p12' 12-bit HDR pixel format.
     * - 'yuv422p12' 12-bit HDR pixel format.
     * - 'yuv444p12' 12-bit HDR pixel format.
     * </pre>
     *
     * <code>string pixel_format = 7;</code>
     *
     * @param value The bytes for pixelFormat to set.
     * @return This builder for chaining.
     */
    public Builder setPixelFormatBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      pixelFormat_ = value;
      onChanged();
      return this;
    }

    private int bitrateBps_;
    /**
     *
     *
     * <pre>
     * Required. The video bitrate in bits per second. Must be between 1 and 1,000,000,000.
     * </pre>
     *
     * <code>int32 bitrate_bps = 8 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bitrateBps.
     */
    @java.lang.Override
    public int getBitrateBps() {
      return bitrateBps_;
    }
    /**
     *
     *
     * <pre>
     * Required. The video bitrate in bits per second. Must be between 1 and 1,000,000,000.
     * </pre>
     *
     * <code>int32 bitrate_bps = 8 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bitrateBps to set.
     * @return This builder for chaining.
     */
    public Builder setBitrateBps(int value) {

      bitrateBps_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The video bitrate in bits per second. Must be between 1 and 1,000,000,000.
     * </pre>
     *
     * <code>int32 bitrate_bps = 8 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBitrateBps() {

      bitrateBps_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object rateControlMode_ = "";
    /**
     *
     *
     * <pre>
     * Specify the `rate_control_mode`. The default is `"vbr"`.
     * Supported rate control modes:
     * - 'vbr' - variable bitrate
     * - 'crf' - constant rate factor
     * </pre>
     *
     * <code>string rate_control_mode = 9;</code>
     *
     * @return The rateControlMode.
     */
    public java.lang.String getRateControlMode() {
      java.lang.Object ref = rateControlMode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rateControlMode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Specify the `rate_control_mode`. The default is `"vbr"`.
     * Supported rate control modes:
     * - 'vbr' - variable bitrate
     * - 'crf' - constant rate factor
     * </pre>
     *
     * <code>string rate_control_mode = 9;</code>
     *
     * @return The bytes for rateControlMode.
     */
    public com.google.protobuf.ByteString getRateControlModeBytes() {
      java.lang.Object ref = rateControlMode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        rateControlMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Specify the `rate_control_mode`. The default is `"vbr"`.
     * Supported rate control modes:
     * - 'vbr' - variable bitrate
     * - 'crf' - constant rate factor
     * </pre>
     *
     * <code>string rate_control_mode = 9;</code>
     *
     * @param value The rateControlMode to set.
     * @return This builder for chaining.
     */
    public Builder setRateControlMode(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      rateControlMode_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specify the `rate_control_mode`. The default is `"vbr"`.
     * Supported rate control modes:
     * - 'vbr' - variable bitrate
     * - 'crf' - constant rate factor
     * </pre>
     *
     * <code>string rate_control_mode = 9;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearRateControlMode() {

      rateControlMode_ = getDefaultInstance().getRateControlMode();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specify the `rate_control_mode`. The default is `"vbr"`.
     * Supported rate control modes:
     * - 'vbr' - variable bitrate
     * - 'crf' - constant rate factor
     * </pre>
     *
     * <code>string rate_control_mode = 9;</code>
     *
     * @param value The bytes for rateControlMode to set.
     * @return This builder for chaining.
     */
    public Builder setRateControlModeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      rateControlMode_ = value;
      onChanged();
      return this;
    }

    private boolean enableTwoPass_;
    /**
     *
     *
     * <pre>
     * Use two-pass encoding strategy to achieve better video quality.
     * `VideoStream.rate_control_mode` must be `"vbr"`. The default is `false`.
     * </pre>
     *
     * <code>bool enable_two_pass = 10;</code>
     *
     * @return The enableTwoPass.
     */
    @java.lang.Override
    public boolean getEnableTwoPass() {
      return enableTwoPass_;
    }
    /**
     *
     *
     * <pre>
     * Use two-pass encoding strategy to achieve better video quality.
     * `VideoStream.rate_control_mode` must be `"vbr"`. The default is `false`.
     * </pre>
     *
     * <code>bool enable_two_pass = 10;</code>
     *
     * @param value The enableTwoPass to set.
     * @return This builder for chaining.
     */
    public Builder setEnableTwoPass(boolean value) {

      enableTwoPass_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Use two-pass encoding strategy to achieve better video quality.
     * `VideoStream.rate_control_mode` must be `"vbr"`. The default is `false`.
     * </pre>
     *
     * <code>bool enable_two_pass = 10;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearEnableTwoPass() {

      enableTwoPass_ = false;
      onChanged();
      return this;
    }

    private int crfLevel_;
    /**
     *
     *
     * <pre>
     * Target CRF level. Must be between 10 and 36, where 10 is the highest
     * quality and 36 is the most efficient compression. The default is 21.
     * </pre>
     *
     * <code>int32 crf_level = 11;</code>
     *
     * @return The crfLevel.
     */
    @java.lang.Override
    public int getCrfLevel() {
      return crfLevel_;
    }
    /**
     *
     *
     * <pre>
     * Target CRF level. Must be between 10 and 36, where 10 is the highest
     * quality and 36 is the most efficient compression. The default is 21.
     * </pre>
     *
     * <code>int32 crf_level = 11;</code>
     *
     * @param value The crfLevel to set.
     * @return This builder for chaining.
     */
    public Builder setCrfLevel(int value) {

      crfLevel_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Target CRF level. Must be between 10 and 36, where 10 is the highest
     * quality and 36 is the most efficient compression. The default is 21.
     * </pre>
     *
     * <code>int32 crf_level = 11;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCrfLevel() {

      crfLevel_ = 0;
      onChanged();
      return this;
    }

    private int vbvSizeBits_;
    /**
     *
     *
     * <pre>
     * Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater
     * than zero. The default is equal to `VideoStream.bitrate_bps`.
     * </pre>
     *
     * <code>int32 vbv_size_bits = 12;</code>
     *
     * @return The vbvSizeBits.
     */
    @java.lang.Override
    public int getVbvSizeBits() {
      return vbvSizeBits_;
    }
    /**
     *
     *
     * <pre>
     * Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater
     * than zero. The default is equal to `VideoStream.bitrate_bps`.
     * </pre>
     *
     * <code>int32 vbv_size_bits = 12;</code>
     *
     * @param value The vbvSizeBits to set.
     * @return This builder for chaining.
     */
    public Builder setVbvSizeBits(int value) {

      vbvSizeBits_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater
     * than zero. The default is equal to `VideoStream.bitrate_bps`.
     * </pre>
     *
     * <code>int32 vbv_size_bits = 12;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearVbvSizeBits() {

      vbvSizeBits_ = 0;
      onChanged();
      return this;
    }

    private int vbvFullnessBits_;
    /**
     *
     *
     * <pre>
     * Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must
     * be greater than zero. The default is equal to 90% of
     * `VideoStream.vbv_size_bits`.
     * </pre>
     *
     * <code>int32 vbv_fullness_bits = 13;</code>
     *
     * @return The vbvFullnessBits.
     */
    @java.lang.Override
    public int getVbvFullnessBits() {
      return vbvFullnessBits_;
    }
    /**
     *
     *
     * <pre>
     * Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must
     * be greater than zero. The default is equal to 90% of
     * `VideoStream.vbv_size_bits`.
     * </pre>
     *
     * <code>int32 vbv_fullness_bits = 13;</code>
     *
     * @param value The vbvFullnessBits to set.
     * @return This builder for chaining.
     */
    public Builder setVbvFullnessBits(int value) {

      vbvFullnessBits_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must
     * be greater than zero. The default is equal to 90% of
     * `VideoStream.vbv_size_bits`.
     * </pre>
     *
     * <code>int32 vbv_fullness_bits = 13;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearVbvFullnessBits() {

      vbvFullnessBits_ = 0;
      onChanged();
      return this;
    }

    private boolean allowOpenGop_;
    /**
     *
     *
     * <pre>
     * Specifies whether an open Group of Pictures (GOP) structure should be
     * allowed or not. The default is `false`.
     * </pre>
     *
     * <code>bool allow_open_gop = 14;</code>
     *
     * @return The allowOpenGop.
     */
    @java.lang.Override
    public boolean getAllowOpenGop() {
      return allowOpenGop_;
    }
    /**
     *
     *
     * <pre>
     * Specifies whether an open Group of Pictures (GOP) structure should be
     * allowed or not. The default is `false`.
     * </pre>
     *
     * <code>bool allow_open_gop = 14;</code>
     *
     * @param value The allowOpenGop to set.
     * @return This builder for chaining.
     */
    public Builder setAllowOpenGop(boolean value) {

      allowOpenGop_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specifies whether an open Group of Pictures (GOP) structure should be
     * allowed or not. The default is `false`.
     * </pre>
     *
     * <code>bool allow_open_gop = 14;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAllowOpenGop() {

      allowOpenGop_ = false;
      onChanged();
      return this;
    }

    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified frame count. Must be greater
     * than zero.
     * </pre>
     *
     * <code>int32 gop_frame_count = 15;</code>
     *
     * @return The gopFrameCount.
     */
    public int getGopFrameCount() {
      if (gopModeCase_ == 15) {
        return (java.lang.Integer) gopMode_;
      }
      return 0;
    }
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified frame count. Must be greater
     * than zero.
     * </pre>
     *
     * <code>int32 gop_frame_count = 15;</code>
     *
     * @param value The gopFrameCount to set.
     * @return This builder for chaining.
     */
    public Builder setGopFrameCount(int value) {
      gopModeCase_ = 15;
      gopMode_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified frame count. Must be greater
     * than zero.
     * </pre>
     *
     * <code>int32 gop_frame_count = 15;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearGopFrameCount() {
      if (gopModeCase_ == 15) {
        gopModeCase_ = 0;
        gopMode_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder,
            com.google.protobuf.DurationOrBuilder>
        gopDurationBuilder_;
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified duration. The default is
     * `"3s"`.
     * </pre>
     *
     * <code>.google.protobuf.Duration gop_duration = 16;</code>
     *
     * @return Whether the gopDuration field is set.
     */
    @java.lang.Override
    public boolean hasGopDuration() {
      return gopModeCase_ == 16;
    }
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified duration. The default is
     * `"3s"`.
     * </pre>
     *
     * <code>.google.protobuf.Duration gop_duration = 16;</code>
     *
     * @return The gopDuration.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getGopDuration() {
      if (gopDurationBuilder_ == null) {
        if (gopModeCase_ == 16) {
          return (com.google.protobuf.Duration) gopMode_;
        }
        return com.google.protobuf.Duration.getDefaultInstance();
      } else {
        if (gopModeCase_ == 16) {
          return gopDurationBuilder_.getMessage();
        }
        return com.google.protobuf.Duration.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified duration. The default is
     * `"3s"`.
     * </pre>
     *
     * <code>.google.protobuf.Duration gop_duration = 16;</code>
     */
    public Builder setGopDuration(com.google.protobuf.Duration value) {
      if (gopDurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        gopMode_ = value;
        onChanged();
      } else {
        gopDurationBuilder_.setMessage(value);
      }
      gopModeCase_ = 16;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified duration. The default is
     * `"3s"`.
     * </pre>
     *
     * <code>.google.protobuf.Duration gop_duration = 16;</code>
     */
    public Builder setGopDuration(com.google.protobuf.Duration.Builder builderForValue) {
      if (gopDurationBuilder_ == null) {
        gopMode_ = builderForValue.build();
        onChanged();
      } else {
        gopDurationBuilder_.setMessage(builderForValue.build());
      }
      gopModeCase_ = 16;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified duration. The default is
     * `"3s"`.
     * </pre>
     *
     * <code>.google.protobuf.Duration gop_duration = 16;</code>
     */
    public Builder mergeGopDuration(com.google.protobuf.Duration value) {
      if (gopDurationBuilder_ == null) {
        if (gopModeCase_ == 16 && gopMode_ != com.google.protobuf.Duration.getDefaultInstance()) {
          gopMode_ =
              com.google.protobuf.Duration.newBuilder((com.google.protobuf.Duration) gopMode_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          gopMode_ = value;
        }
        onChanged();
      } else {
        if (gopModeCase_ == 16) {
          gopDurationBuilder_.mergeFrom(value);
        }
        gopDurationBuilder_.setMessage(value);
      }
      gopModeCase_ = 16;
      return this;
    }
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified duration. The default is
     * `"3s"`.
     * </pre>
     *
     * <code>.google.protobuf.Duration gop_duration = 16;</code>
     */
    public Builder clearGopDuration() {
      if (gopDurationBuilder_ == null) {
        if (gopModeCase_ == 16) {
          gopModeCase_ = 0;
          gopMode_ = null;
          onChanged();
        }
      } else {
        if (gopModeCase_ == 16) {
          gopModeCase_ = 0;
          gopMode_ = null;
        }
        gopDurationBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified duration. The default is
     * `"3s"`.
     * </pre>
     *
     * <code>.google.protobuf.Duration gop_duration = 16;</code>
     */
    public com.google.protobuf.Duration.Builder getGopDurationBuilder() {
      return getGopDurationFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified duration. The default is
     * `"3s"`.
     * </pre>
     *
     * <code>.google.protobuf.Duration gop_duration = 16;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getGopDurationOrBuilder() {
      if ((gopModeCase_ == 16) && (gopDurationBuilder_ != null)) {
        return gopDurationBuilder_.getMessageOrBuilder();
      } else {
        if (gopModeCase_ == 16) {
          return (com.google.protobuf.Duration) gopMode_;
        }
        return com.google.protobuf.Duration.getDefaultInstance();
      }
    }
    /**
     *
     *
     * <pre>
     * Select the GOP size based on the specified duration. The default is
     * `"3s"`.
     * </pre>
     *
     * <code>.google.protobuf.Duration gop_duration = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder,
            com.google.protobuf.DurationOrBuilder>
        getGopDurationFieldBuilder() {
      if (gopDurationBuilder_ == null) {
        if (!(gopModeCase_ == 16)) {
          gopMode_ = com.google.protobuf.Duration.getDefaultInstance();
        }
        gopDurationBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration,
                com.google.protobuf.Duration.Builder,
                com.google.protobuf.DurationOrBuilder>(
                (com.google.protobuf.Duration) gopMode_, getParentForChildren(), isClean());
        gopMode_ = null;
      }
      gopModeCase_ = 16;
      onChanged();
      ;
      return gopDurationBuilder_;
    }

    private java.lang.Object entropyCoder_ = "";
    /**
     *
     *
     * <pre>
     * The entropy coder to use. The default is `"cabac"`.
     * Supported entropy coders:
     * - 'cavlc'
     * - 'cabac'
     * </pre>
     *
     * <code>string entropy_coder = 17;</code>
     *
     * @return The entropyCoder.
     */
    public java.lang.String getEntropyCoder() {
      java.lang.Object ref = entropyCoder_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        entropyCoder_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The entropy coder to use. The default is `"cabac"`.
     * Supported entropy coders:
     * - 'cavlc'
     * - 'cabac'
     * </pre>
     *
     * <code>string entropy_coder = 17;</code>
     *
     * @return The bytes for entropyCoder.
     */
    public com.google.protobuf.ByteString getEntropyCoderBytes() {
      java.lang.Object ref = entropyCoder_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        entropyCoder_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The entropy coder to use. The default is `"cabac"`.
     * Supported entropy coders:
     * - 'cavlc'
     * - 'cabac'
     * </pre>
     *
     * <code>string entropy_coder = 17;</code>
     *
     * @param value The entropyCoder to set.
     * @return This builder for chaining.
     */
    public Builder setEntropyCoder(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      entropyCoder_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The entropy coder to use. The default is `"cabac"`.
     * Supported entropy coders:
     * - 'cavlc'
     * - 'cabac'
     * </pre>
     *
     * <code>string entropy_coder = 17;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearEntropyCoder() {

      entropyCoder_ = getDefaultInstance().getEntropyCoder();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The entropy coder to use. The default is `"cabac"`.
     * Supported entropy coders:
     * - 'cavlc'
     * - 'cabac'
     * </pre>
     *
     * <code>string entropy_coder = 17;</code>
     *
     * @param value The bytes for entropyCoder to set.
     * @return This builder for chaining.
     */
    public Builder setEntropyCoderBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      entropyCoder_ = value;
      onChanged();
      return this;
    }

    private boolean bPyramid_;
    /**
     *
     *
     * <pre>
     * Allow B-pyramid for reference frame selection. This may not be supported
     * on all decoders. The default is `false`.
     * </pre>
     *
     * <code>bool b_pyramid = 18;</code>
     *
     * @return The bPyramid.
     */
    @java.lang.Override
    public boolean getBPyramid() {
      return bPyramid_;
    }
    /**
     *
     *
     * <pre>
     * Allow B-pyramid for reference frame selection. This may not be supported
     * on all decoders. The default is `false`.
     * </pre>
     *
     * <code>bool b_pyramid = 18;</code>
     *
     * @param value The bPyramid to set.
     * @return This builder for chaining.
     */
    public Builder setBPyramid(boolean value) {

      bPyramid_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Allow B-pyramid for reference frame selection. This may not be supported
     * on all decoders. The default is `false`.
     * </pre>
     *
     * <code>bool b_pyramid = 18;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBPyramid() {

      bPyramid_ = false;
      onChanged();
      return this;
    }

    private int bFrameCount_;
    /**
     *
     *
     * <pre>
     * The number of consecutive B-frames. Must be greater than or equal to zero.
     * Must be less than `VideoStream.gop_frame_count` if set. The default is 0.
     * </pre>
     *
     * <code>int32 b_frame_count = 19;</code>
     *
     * @return The bFrameCount.
     */
    @java.lang.Override
    public int getBFrameCount() {
      return bFrameCount_;
    }
    /**
     *
     *
     * <pre>
     * The number of consecutive B-frames. Must be greater than or equal to zero.
     * Must be less than `VideoStream.gop_frame_count` if set. The default is 0.
     * </pre>
     *
     * <code>int32 b_frame_count = 19;</code>
     *
     * @param value The bFrameCount to set.
     * @return This builder for chaining.
     */
    public Builder setBFrameCount(int value) {

      bFrameCount_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The number of consecutive B-frames. Must be greater than or equal to zero.
     * Must be less than `VideoStream.gop_frame_count` if set. The default is 0.
     * </pre>
     *
     * <code>int32 b_frame_count = 19;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBFrameCount() {

      bFrameCount_ = 0;
      onChanged();
      return this;
    }

    private double frameRate_;
    /**
     *
     *
     * <pre>
     * Required. The target video frame rate in frames per second (FPS). Must be less than
     * or equal to 120. Will default to the input frame rate if larger than the
     * input frame rate. The API will generate an output FPS that is divisible by
     * the input FPS, and smaller or equal to the target FPS.
     * The following table shows the computed video FPS given the target FPS (in
     * parenthesis) and input FPS (in the first column):
     * ```
     * |        | (30)   | (60)   | (25) | (50) |
     * |--------|--------|--------|------|------|
     * | 240    | Fail   | Fail   | Fail | Fail |
     * | 120    | 30     | 60     | 20   | 30   |
     * | 100    | 25     | 50     | 20   | 30   |
     * | 50     | 25     | 50     | 20   | 30   |
     * | 60     | 30     | 60     | 20   | 30   |
     * | 59.94  | 29.97  | 59.94  | 20   | 30   |
     * | 48     | 24     | 48     | 20   | 30   |
     * | 30     | 30     | 30     | 20   | 30   |
     * | 25     | 25     | 25     | 20   | 30   |
     * | 24     | 24     | 24     | 20   | 30   |
     * | 23.976 | 23.976 | 23.976 | 20   | 30   |
     * | 15     | 15     | 15     | 20   | 30   |
     * | 12     | 12     | 12     | 20   | 30   |
     * | 10     | 10     | 10     | 20   | 30   |
     * ```
     * </pre>
     *
     * <code>double frame_rate = 20 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The frameRate.
     */
    @java.lang.Override
    public double getFrameRate() {
      return frameRate_;
    }
    /**
     *
     *
     * <pre>
     * Required. The target video frame rate in frames per second (FPS). Must be less than
     * or equal to 120. Will default to the input frame rate if larger than the
     * input frame rate. The API will generate an output FPS that is divisible by
     * the input FPS, and smaller or equal to the target FPS.
     * The following table shows the computed video FPS given the target FPS (in
     * parenthesis) and input FPS (in the first column):
     * ```
     * |        | (30)   | (60)   | (25) | (50) |
     * |--------|--------|--------|------|------|
     * | 240    | Fail   | Fail   | Fail | Fail |
     * | 120    | 30     | 60     | 20   | 30   |
     * | 100    | 25     | 50     | 20   | 30   |
     * | 50     | 25     | 50     | 20   | 30   |
     * | 60     | 30     | 60     | 20   | 30   |
     * | 59.94  | 29.97  | 59.94  | 20   | 30   |
     * | 48     | 24     | 48     | 20   | 30   |
     * | 30     | 30     | 30     | 20   | 30   |
     * | 25     | 25     | 25     | 20   | 30   |
     * | 24     | 24     | 24     | 20   | 30   |
     * | 23.976 | 23.976 | 23.976 | 20   | 30   |
     * | 15     | 15     | 15     | 20   | 30   |
     * | 12     | 12     | 12     | 20   | 30   |
     * | 10     | 10     | 10     | 20   | 30   |
     * ```
     * </pre>
     *
     * <code>double frame_rate = 20 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The frameRate to set.
     * @return This builder for chaining.
     */
    public Builder setFrameRate(double value) {

      frameRate_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The target video frame rate in frames per second (FPS). Must be less than
     * or equal to 120. Will default to the input frame rate if larger than the
     * input frame rate. The API will generate an output FPS that is divisible by
     * the input FPS, and smaller or equal to the target FPS.
     * The following table shows the computed video FPS given the target FPS (in
     * parenthesis) and input FPS (in the first column):
     * ```
     * |        | (30)   | (60)   | (25) | (50) |
     * |--------|--------|--------|------|------|
     * | 240    | Fail   | Fail   | Fail | Fail |
     * | 120    | 30     | 60     | 20   | 30   |
     * | 100    | 25     | 50     | 20   | 30   |
     * | 50     | 25     | 50     | 20   | 30   |
     * | 60     | 30     | 60     | 20   | 30   |
     * | 59.94  | 29.97  | 59.94  | 20   | 30   |
     * | 48     | 24     | 48     | 20   | 30   |
     * | 30     | 30     | 30     | 20   | 30   |
     * | 25     | 25     | 25     | 20   | 30   |
     * | 24     | 24     | 24     | 20   | 30   |
     * | 23.976 | 23.976 | 23.976 | 20   | 30   |
     * | 15     | 15     | 15     | 20   | 30   |
     * | 12     | 12     | 12     | 20   | 30   |
     * | 10     | 10     | 10     | 20   | 30   |
     * ```
     * </pre>
     *
     * <code>double frame_rate = 20 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearFrameRate() {

      frameRate_ = 0D;
      onChanged();
      return this;
    }

    private double aqStrength_;
    /**
     *
     *
     * <pre>
     * Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and
     * 1, where 0 disables the quantizer and 1 maximizes the quantizer. A
     * higher value equals a lower bitrate but smoother image. The default is 0.
     * </pre>
     *
     * <code>double aq_strength = 21;</code>
     *
     * @return The aqStrength.
     */
    @java.lang.Override
    public double getAqStrength() {
      return aqStrength_;
    }
    /**
     *
     *
     * <pre>
     * Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and
     * 1, where 0 disables the quantizer and 1 maximizes the quantizer. A
     * higher value equals a lower bitrate but smoother image. The default is 0.
     * </pre>
     *
     * <code>double aq_strength = 21;</code>
     *
     * @param value The aqStrength to set.
     * @return This builder for chaining.
     */
    public Builder setAqStrength(double value) {

      aqStrength_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and
     * 1, where 0 disables the quantizer and 1 maximizes the quantizer. A
     * higher value equals a lower bitrate but smoother image. The default is 0.
     * </pre>
     *
     * <code>double aq_strength = 21;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAqStrength() {

      aqStrength_ = 0D;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.video.transcoder.v1beta1.VideoStream)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.video.transcoder.v1beta1.VideoStream)
  private static final com.google.cloud.video.transcoder.v1beta1.VideoStream DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.video.transcoder.v1beta1.VideoStream();
  }

  public static com.google.cloud.video.transcoder.v1beta1.VideoStream getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VideoStream> PARSER =
      new com.google.protobuf.AbstractParser<VideoStream>() {
        @java.lang.Override
        public VideoStream parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new VideoStream(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<VideoStream> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VideoStream> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.video.transcoder.v1beta1.VideoStream getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
