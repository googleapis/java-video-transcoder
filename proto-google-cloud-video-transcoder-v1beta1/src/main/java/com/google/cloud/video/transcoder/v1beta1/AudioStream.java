/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/video/transcoder/v1beta1/resources.proto

package com.google.cloud.video.transcoder.v1beta1;

/**
 *
 *
 * <pre>
 * Audio stream resource.
 * </pre>
 *
 * Protobuf type {@code google.cloud.video.transcoder.v1beta1.AudioStream}
 */
public final class AudioStream extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.video.transcoder.v1beta1.AudioStream)
    AudioStreamOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use AudioStream.newBuilder() to construct.
  private AudioStream(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private AudioStream() {
    codec_ = "";
    channelLayout_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    mapping_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new AudioStream();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private AudioStream(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              java.lang.String s = input.readStringRequireUtf8();

              codec_ = s;
              break;
            }
          case 16:
            {
              bitrateBps_ = input.readInt32();
              break;
            }
          case 24:
            {
              channelCount_ = input.readInt32();
              break;
            }
          case 34:
            {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                channelLayout_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              channelLayout_.add(s);
              break;
            }
          case 42:
            {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                mapping_ =
                    new java.util.ArrayList<
                        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom>();
                mutable_bitField0_ |= 0x00000002;
              }
              mapping_.add(
                  input.readMessage(
                      com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.parser(),
                      extensionRegistry));
              break;
            }
          case 48:
            {
              sampleRateHertz_ = input.readInt32();
              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        channelLayout_ = channelLayout_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        mapping_ = java.util.Collections.unmodifiableList(mapping_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
        .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
        .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.video.transcoder.v1beta1.AudioStream.class,
            com.google.cloud.video.transcoder.v1beta1.AudioStream.Builder.class);
  }

  public interface AudioAtomOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. The `EditAtom.key` that references the atom with audio inputs in the
     * `Job.edit_list`.
     * </pre>
     *
     * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The key.
     */
    java.lang.String getKey();
    /**
     *
     *
     * <pre>
     * Required. The `EditAtom.key` that references the atom with audio inputs in the
     * `Job.edit_list`.
     * </pre>
     *
     * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString getKeyBytes();

    /**
     *
     *
     * <pre>
     * List of `Channel`s for this audio stream.
     * for in-depth explanation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
     * </code>
     */
    java.util.List<com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel>
        getChannelsList();
    /**
     *
     *
     * <pre>
     * List of `Channel`s for this audio stream.
     * for in-depth explanation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
     * </code>
     */
    com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel getChannels(
        int index);
    /**
     *
     *
     * <pre>
     * List of `Channel`s for this audio stream.
     * for in-depth explanation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
     * </code>
     */
    int getChannelsCount();
    /**
     *
     *
     * <pre>
     * List of `Channel`s for this audio stream.
     * for in-depth explanation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
     * </code>
     */
    java.util.List<
            ? extends
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
                    .AudioChannelOrBuilder>
        getChannelsOrBuilderList();
    /**
     *
     *
     * <pre>
     * List of `Channel`s for this audio stream.
     * for in-depth explanation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
     * </code>
     */
    com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannelOrBuilder
        getChannelsOrBuilder(int index);
  }
  /**
   *
   *
   * <pre>
   * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
   * </pre>
   *
   * Protobuf type {@code google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom}
   */
  public static final class AudioAtom extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom)
      AudioAtomOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use AudioAtom.newBuilder() to construct.
    private AudioAtom(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private AudioAtom() {
      key_ = "";
      channels_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new AudioAtom();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private AudioAtom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                java.lang.String s = input.readStringRequireUtf8();

                key_ = s;
                break;
              }
            case 18:
              {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  channels_ =
                      new java.util.ArrayList<
                          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
                              .AudioChannel>();
                  mutable_bitField0_ |= 0x00000001;
                }
                channels_.add(
                    input.readMessage(
                        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                            .parser(),
                        extensionRegistry));
                break;
              }
            default:
              {
                if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          channels_ = java.util.Collections.unmodifiableList(channels_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
          .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
          .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.class,
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder.class);
    }

    public interface AudioChannelOrBuilder
        extends
        // @@protoc_insertion_point(interface_extends:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel)
        com.google.protobuf.MessageOrBuilder {

      /**
       *
       *
       * <pre>
       * List of `Job.inputs` for this audio channel.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
       * </code>
       */
      java.util.List<
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                  .AudioChannelInput>
          getInputsList();
      /**
       *
       *
       * <pre>
       * List of `Job.inputs` for this audio channel.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
       * </code>
       */
      com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput
          getInputs(int index);
      /**
       *
       *
       * <pre>
       * List of `Job.inputs` for this audio channel.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
       * </code>
       */
      int getInputsCount();
      /**
       *
       *
       * <pre>
       * List of `Job.inputs` for this audio channel.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
       * </code>
       */
      java.util.List<
              ? extends
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                      .AudioChannelInputOrBuilder>
          getInputsOrBuilderList();
      /**
       *
       *
       * <pre>
       * List of `Job.inputs` for this audio channel.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
       * </code>
       */
      com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
              .AudioChannelInputOrBuilder
          getInputsOrBuilder(int index);
    }
    /**
     *
     *
     * <pre>
     * The audio channel.
     * </pre>
     *
     * Protobuf type {@code
     * google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel}
     */
    public static final class AudioChannel extends com.google.protobuf.GeneratedMessageV3
        implements
        // @@protoc_insertion_point(message_implements:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel)
        AudioChannelOrBuilder {
      private static final long serialVersionUID = 0L;
      // Use AudioChannel.newBuilder() to construct.
      private AudioChannel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }

      private AudioChannel() {
        inputs_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
        return new AudioChannel();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
        return this.unknownFields;
      }

      private AudioChannel(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18:
                {
                  if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                    inputs_ =
                        new java.util.ArrayList<
                            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
                                .AudioChannel.AudioChannelInput>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  inputs_.add(
                      input.readMessage(
                          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
                              .AudioChannel.AudioChannelInput.parser(),
                          extensionRegistry));
                  break;
                }
              default:
                {
                  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            inputs_ = java.util.Collections.unmodifiableList(inputs_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
            .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_AudioChannel_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
            .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_AudioChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.class,
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.Builder
                    .class);
      }

      public interface AudioChannelInputOrBuilder
          extends
          // @@protoc_insertion_point(interface_extends:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput)
          com.google.protobuf.MessageOrBuilder {

        /**
         *
         *
         * <pre>
         * Required. The `Input.key` that identifies the input file.
         * </pre>
         *
         * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
         *
         * @return The key.
         */
        java.lang.String getKey();
        /**
         *
         *
         * <pre>
         * Required. The `Input.key` that identifies the input file.
         * </pre>
         *
         * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
         *
         * @return The bytes for key.
         */
        com.google.protobuf.ByteString getKeyBytes();

        /**
         *
         *
         * <pre>
         * Required. The zero-based index of the track in the input file.
         * </pre>
         *
         * <code>int32 track = 2 [(.google.api.field_behavior) = REQUIRED];</code>
         *
         * @return The track.
         */
        int getTrack();

        /**
         *
         *
         * <pre>
         * Required. The zero-based index of the channel in the input file.
         * </pre>
         *
         * <code>int32 channel = 3 [(.google.api.field_behavior) = REQUIRED];</code>
         *
         * @return The channel.
         */
        int getChannel();

        /**
         *
         *
         * <pre>
         * Audio volume control in dB. Negative values decrease volume,
         * positive values increase. The default is 0.
         * </pre>
         *
         * <code>double gain_db = 4;</code>
         *
         * @return The gainDb.
         */
        double getGainDb();
      }
      /**
       *
       *
       * <pre>
       * Identifies which input file, track, and channel should be used.
       * </pre>
       *
       * Protobuf type {@code
       * google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput}
       */
      public static final class AudioChannelInput extends com.google.protobuf.GeneratedMessageV3
          implements
          // @@protoc_insertion_point(message_implements:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput)
          AudioChannelInputOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use AudioChannelInput.newBuilder() to construct.
        private AudioChannelInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }

        private AudioChannelInput() {
          key_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
          return new AudioChannelInput();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
          return this.unknownFields;
        }

        private AudioChannelInput(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10:
                  {
                    java.lang.String s = input.readStringRequireUtf8();

                    key_ = s;
                    break;
                  }
                case 16:
                  {
                    track_ = input.readInt32();
                    break;
                  }
                case 24:
                  {
                    channel_ = input.readInt32();
                    break;
                  }
                case 33:
                  {
                    gainDb_ = input.readDouble();
                    break;
                  }
                default:
                  {
                    if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
              .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_AudioChannel_AudioChannelInput_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
              .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_AudioChannel_AudioChannelInput_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                      .AudioChannelInput.class,
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                      .AudioChannelInput.Builder.class);
        }

        public static final int KEY_FIELD_NUMBER = 1;
        private volatile java.lang.Object key_;
        /**
         *
         *
         * <pre>
         * Required. The `Input.key` that identifies the input file.
         * </pre>
         *
         * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
         *
         * @return The key.
         */
        @java.lang.Override
        public java.lang.String getKey() {
          java.lang.Object ref = key_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            key_ = s;
            return s;
          }
        }
        /**
         *
         *
         * <pre>
         * Required. The `Input.key` that identifies the input file.
         * </pre>
         *
         * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
         *
         * @return The bytes for key.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getKeyBytes() {
          java.lang.Object ref = key_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            key_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TRACK_FIELD_NUMBER = 2;
        private int track_;
        /**
         *
         *
         * <pre>
         * Required. The zero-based index of the track in the input file.
         * </pre>
         *
         * <code>int32 track = 2 [(.google.api.field_behavior) = REQUIRED];</code>
         *
         * @return The track.
         */
        @java.lang.Override
        public int getTrack() {
          return track_;
        }

        public static final int CHANNEL_FIELD_NUMBER = 3;
        private int channel_;
        /**
         *
         *
         * <pre>
         * Required. The zero-based index of the channel in the input file.
         * </pre>
         *
         * <code>int32 channel = 3 [(.google.api.field_behavior) = REQUIRED];</code>
         *
         * @return The channel.
         */
        @java.lang.Override
        public int getChannel() {
          return channel_;
        }

        public static final int GAIN_DB_FIELD_NUMBER = 4;
        private double gainDb_;
        /**
         *
         *
         * <pre>
         * Audio volume control in dB. Negative values decrease volume,
         * positive values increase. The default is 0.
         * </pre>
         *
         * <code>double gain_db = 4;</code>
         *
         * @return The gainDb.
         */
        @java.lang.Override
        public double getGainDb() {
          return gainDb_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
          if (!getKeyBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
          }
          if (track_ != 0) {
            output.writeInt32(2, track_);
          }
          if (channel_ != 0) {
            output.writeInt32(3, channel_);
          }
          if (gainDb_ != 0D) {
            output.writeDouble(4, gainDb_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!getKeyBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
          }
          if (track_ != 0) {
            size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, track_);
          }
          if (channel_ != 0) {
            size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, channel_);
          }
          if (gainDb_ != 0D) {
            size += com.google.protobuf.CodedOutputStream.computeDoubleSize(4, gainDb_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
            return true;
          }
          if (!(obj
              instanceof
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                  .AudioChannelInput)) {
            return super.equals(obj);
          }
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                  .AudioChannelInput
              other =
                  (com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                          .AudioChannelInput)
                      obj;

          if (!getKey().equals(other.getKey())) return false;
          if (getTrack() != other.getTrack()) return false;
          if (getChannel() != other.getChannel()) return false;
          if (java.lang.Double.doubleToLongBits(getGainDb())
              != java.lang.Double.doubleToLongBits(other.getGainDb())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + KEY_FIELD_NUMBER;
          hash = (53 * hash) + getKey().hashCode();
          hash = (37 * hash) + TRACK_FIELD_NUMBER;
          hash = (53 * hash) + getTrack();
          hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
          hash = (53 * hash) + getChannel();
          hash = (37 * hash) + GAIN_DB_FIELD_NUMBER;
          hash =
              (53 * hash)
                  + com.google.protobuf.Internal.hashLong(
                      java.lang.Double.doubleToLongBits(getGainDb()));
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseFrom(java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseFrom(com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseFrom(java.io.InputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
              PARSER, input, extensionRegistry);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
              PARSER, input);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
              PARSER, input, extensionRegistry);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
              PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
          return newBuilder();
        }

        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput
                prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         *
         *
         * <pre>
         * Identifies which input file, track, and channel should be used.
         * </pre>
         *
         * Protobuf type {@code
         * google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput}
         */
        public static final class Builder
            extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
            implements
            // @@protoc_insertion_point(builder_implements:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput)
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInputOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
                .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_AudioChannel_AudioChannelInput_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
                .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_AudioChannel_AudioChannelInput_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                        .AudioChannelInput.class,
                    com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                        .AudioChannelInput.Builder.class);
          }

          // Construct using
          // com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }

          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
          }

          @java.lang.Override
          public Builder clear() {
            super.clear();
            key_ = "";

            track_ = 0;

            channel_ = 0;

            gainDb_ = 0D;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
            return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
                .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_AudioChannel_AudioChannelInput_descriptor;
          }

          @java.lang.Override
          public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                  .AudioChannelInput
              getDefaultInstanceForType() {
            return com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput.getDefaultInstance();
          }

          @java.lang.Override
          public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                  .AudioChannelInput
              build() {
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput
                result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                  .AudioChannelInput
              buildPartial() {
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput
                result =
                    new com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                        .AudioChannelInput(this);
            result.key_ = key_;
            result.track_ = track_;
            result.channel_ = channel_;
            result.gainDb_ = gainDb_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }

          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return super.setField(field, value);
          }

          @java.lang.Override
          public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }

          @java.lang.Override
          public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }

          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index,
              java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }

          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }

          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other
                instanceof
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput) {
              return mergeFrom(
                  (com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                          .AudioChannelInput)
                      other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                      .AudioChannelInput
                  other) {
            if (other
                == com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput.getDefaultInstance()) return this;
            if (!other.getKey().isEmpty()) {
              key_ = other.key_;
              onChanged();
            }
            if (other.getTrack() != 0) {
              setTrack(other.getTrack());
            }
            if (other.getChannel() != 0) {
              setChannel(other.getChannel());
            }
            if (other.getGainDb() != 0D) {
              setGainDb(other.getGainDb());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput
                parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage =
                  (com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                          .AudioChannelInput)
                      e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object key_ = "";
          /**
           *
           *
           * <pre>
           * Required. The `Input.key` that identifies the input file.
           * </pre>
           *
           * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @return The key.
           */
          public java.lang.String getKey() {
            java.lang.Object ref = key_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              key_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           *
           *
           * <pre>
           * Required. The `Input.key` that identifies the input file.
           * </pre>
           *
           * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @return The bytes for key.
           */
          public com.google.protobuf.ByteString getKeyBytes() {
            java.lang.Object ref = key_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
              key_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           *
           *
           * <pre>
           * Required. The `Input.key` that identifies the input file.
           * </pre>
           *
           * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @param value The key to set.
           * @return This builder for chaining.
           */
          public Builder setKey(java.lang.String value) {
            if (value == null) {
              throw new NullPointerException();
            }

            key_ = value;
            onChanged();
            return this;
          }
          /**
           *
           *
           * <pre>
           * Required. The `Input.key` that identifies the input file.
           * </pre>
           *
           * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearKey() {

            key_ = getDefaultInstance().getKey();
            onChanged();
            return this;
          }
          /**
           *
           *
           * <pre>
           * Required. The `Input.key` that identifies the input file.
           * </pre>
           *
           * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @param value The bytes for key to set.
           * @return This builder for chaining.
           */
          public Builder setKeyBytes(com.google.protobuf.ByteString value) {
            if (value == null) {
              throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            key_ = value;
            onChanged();
            return this;
          }

          private int track_;
          /**
           *
           *
           * <pre>
           * Required. The zero-based index of the track in the input file.
           * </pre>
           *
           * <code>int32 track = 2 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @return The track.
           */
          @java.lang.Override
          public int getTrack() {
            return track_;
          }
          /**
           *
           *
           * <pre>
           * Required. The zero-based index of the track in the input file.
           * </pre>
           *
           * <code>int32 track = 2 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @param value The track to set.
           * @return This builder for chaining.
           */
          public Builder setTrack(int value) {

            track_ = value;
            onChanged();
            return this;
          }
          /**
           *
           *
           * <pre>
           * Required. The zero-based index of the track in the input file.
           * </pre>
           *
           * <code>int32 track = 2 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearTrack() {

            track_ = 0;
            onChanged();
            return this;
          }

          private int channel_;
          /**
           *
           *
           * <pre>
           * Required. The zero-based index of the channel in the input file.
           * </pre>
           *
           * <code>int32 channel = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @return The channel.
           */
          @java.lang.Override
          public int getChannel() {
            return channel_;
          }
          /**
           *
           *
           * <pre>
           * Required. The zero-based index of the channel in the input file.
           * </pre>
           *
           * <code>int32 channel = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @param value The channel to set.
           * @return This builder for chaining.
           */
          public Builder setChannel(int value) {

            channel_ = value;
            onChanged();
            return this;
          }
          /**
           *
           *
           * <pre>
           * Required. The zero-based index of the channel in the input file.
           * </pre>
           *
           * <code>int32 channel = 3 [(.google.api.field_behavior) = REQUIRED];</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearChannel() {

            channel_ = 0;
            onChanged();
            return this;
          }

          private double gainDb_;
          /**
           *
           *
           * <pre>
           * Audio volume control in dB. Negative values decrease volume,
           * positive values increase. The default is 0.
           * </pre>
           *
           * <code>double gain_db = 4;</code>
           *
           * @return The gainDb.
           */
          @java.lang.Override
          public double getGainDb() {
            return gainDb_;
          }
          /**
           *
           *
           * <pre>
           * Audio volume control in dB. Negative values decrease volume,
           * positive values increase. The default is 0.
           * </pre>
           *
           * <code>double gain_db = 4;</code>
           *
           * @param value The gainDb to set.
           * @return This builder for chaining.
           */
          public Builder setGainDb(double value) {

            gainDb_ = value;
            onChanged();
            return this;
          }
          /**
           *
           *
           * <pre>
           * Audio volume control in dB. Negative values decrease volume,
           * positive values increase. The default is 0.
           * </pre>
           *
           * <code>double gain_db = 4;</code>
           *
           * @return This builder for chaining.
           */
          public Builder clearGainDb() {

            gainDb_ = 0D;
            onChanged();
            return this;
          }

          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }

          // @@protoc_insertion_point(builder_scope:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput)
        }

        // @@protoc_insertion_point(class_scope:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput)
        private static final com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
                .AudioChannel.AudioChannelInput
            DEFAULT_INSTANCE;

        static {
          DEFAULT_INSTANCE =
              new com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                  .AudioChannelInput();
        }

        public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AudioChannelInput> PARSER =
            new com.google.protobuf.AbstractParser<AudioChannelInput>() {
              @java.lang.Override
              public AudioChannelInput parsePartialFrom(
                  com.google.protobuf.CodedInputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return new AudioChannelInput(input, extensionRegistry);
              }
            };

        public static com.google.protobuf.Parser<AudioChannelInput> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AudioChannelInput> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }
      }

      public static final int INPUTS_FIELD_NUMBER = 2;
      private java.util.List<
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                  .AudioChannelInput>
          inputs_;
      /**
       *
       *
       * <pre>
       * List of `Job.inputs` for this audio channel.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
       * </code>
       */
      @java.lang.Override
      public java.util.List<
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                  .AudioChannelInput>
          getInputsList() {
        return inputs_;
      }
      /**
       *
       *
       * <pre>
       * List of `Job.inputs` for this audio channel.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
       * </code>
       */
      @java.lang.Override
      public java.util.List<
              ? extends
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                      .AudioChannelInputOrBuilder>
          getInputsOrBuilderList() {
        return inputs_;
      }
      /**
       *
       *
       * <pre>
       * List of `Job.inputs` for this audio channel.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
       * </code>
       */
      @java.lang.Override
      public int getInputsCount() {
        return inputs_.size();
      }
      /**
       *
       *
       * <pre>
       * List of `Job.inputs` for this audio channel.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
       * </code>
       */
      @java.lang.Override
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
              .AudioChannelInput
          getInputs(int index) {
        return inputs_.get(index);
      }
      /**
       *
       *
       * <pre>
       * List of `Job.inputs` for this audio channel.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
       * </code>
       */
      @java.lang.Override
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
              .AudioChannelInputOrBuilder
          getInputsOrBuilder(int index) {
        return inputs_.get(index);
      }

      private byte memoizedIsInitialized = -1;

      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        for (int i = 0; i < inputs_.size(); i++) {
          output.writeMessage(2, inputs_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < inputs_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, inputs_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
          return true;
        }
        if (!(obj
            instanceof
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel)) {
          return super.equals(obj);
        }
        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel other =
            (com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel) obj;

        if (!getInputsList().equals(other.getInputsList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getInputsCount() > 0) {
          hash = (37 * hash) + INPUTS_FIELD_NUMBER;
          hash = (53 * hash) + getInputsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseFrom(java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseFrom(
              java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseFrom(com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
            PARSER, input, extensionRegistry);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
            PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() {
        return newBuilder();
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }

      public static Builder newBuilder(
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       *
       *
       * <pre>
       * The audio channel.
       * </pre>
       *
       * Protobuf type {@code
       * google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel}
       */
      public static final class Builder
          extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
          implements
          // @@protoc_insertion_point(builder_implements:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel)
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannelOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
              .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_AudioChannel_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
              .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_AudioChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                      .class,
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                      .Builder.class);
        }

        // Construct using
        // com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
            getInputsFieldBuilder();
          }
        }

        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (inputsBuilder_ == null) {
            inputs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            inputsBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
          return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
              .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_AudioChannel_descriptor;
        }

        @java.lang.Override
        public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
            getDefaultInstanceForType() {
          return com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
              .getDefaultInstance();
        }

        @java.lang.Override
        public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
            build() {
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel result =
              buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
            buildPartial() {
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel result =
              new com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel(
                  this);
          int from_bitField0_ = bitField0_;
          if (inputsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              inputs_ = java.util.Collections.unmodifiableList(inputs_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.inputs_ = inputs_;
          } else {
            result.inputs_ = inputsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }

        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index,
            java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other
              instanceof
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel) {
            return mergeFrom(
                (com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel)
                    other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel other) {
          if (other
              == com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                  .getDefaultInstance()) return this;
          if (inputsBuilder_ == null) {
            if (!other.inputs_.isEmpty()) {
              if (inputs_.isEmpty()) {
                inputs_ = other.inputs_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureInputsIsMutable();
                inputs_.addAll(other.inputs_);
              }
              onChanged();
            }
          } else {
            if (!other.inputs_.isEmpty()) {
              if (inputsBuilder_.isEmpty()) {
                inputsBuilder_.dispose();
                inputsBuilder_ = null;
                inputs_ = other.inputs_;
                bitField0_ = (bitField0_ & ~0x00000001);
                inputsBuilder_ =
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                        ? getInputsFieldBuilder()
                        : null;
              } else {
                inputsBuilder_.addAllMessages(other.inputs_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
              parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage =
                (com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel)
                    e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int bitField0_;

        private java.util.List<
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput>
            inputs_ = java.util.Collections.emptyList();

        private void ensureInputsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            inputs_ =
                new java.util.ArrayList<
                    com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                        .AudioChannelInput>(inputs_);
            bitField0_ |= 0x00000001;
          }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput,
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput.Builder,
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInputOrBuilder>
            inputsBuilder_;

        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public java.util.List<
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput>
            getInputsList() {
          if (inputsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(inputs_);
          } else {
            return inputsBuilder_.getMessageList();
          }
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public int getInputsCount() {
          if (inputsBuilder_ == null) {
            return inputs_.size();
          } else {
            return inputsBuilder_.getCount();
          }
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput
            getInputs(int index) {
          if (inputsBuilder_ == null) {
            return inputs_.get(index);
          } else {
            return inputsBuilder_.getMessage(index);
          }
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public Builder setInputs(
            int index,
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput
                value) {
          if (inputsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInputsIsMutable();
            inputs_.set(index, value);
            onChanged();
          } else {
            inputsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public Builder setInputs(
            int index,
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput.Builder
                builderForValue) {
          if (inputsBuilder_ == null) {
            ensureInputsIsMutable();
            inputs_.set(index, builderForValue.build());
            onChanged();
          } else {
            inputsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public Builder addInputs(
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput
                value) {
          if (inputsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInputsIsMutable();
            inputs_.add(value);
            onChanged();
          } else {
            inputsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public Builder addInputs(
            int index,
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput
                value) {
          if (inputsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInputsIsMutable();
            inputs_.add(index, value);
            onChanged();
          } else {
            inputsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public Builder addInputs(
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput.Builder
                builderForValue) {
          if (inputsBuilder_ == null) {
            ensureInputsIsMutable();
            inputs_.add(builderForValue.build());
            onChanged();
          } else {
            inputsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public Builder addInputs(
            int index,
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput.Builder
                builderForValue) {
          if (inputsBuilder_ == null) {
            ensureInputsIsMutable();
            inputs_.add(index, builderForValue.build());
            onChanged();
          } else {
            inputsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public Builder addAllInputs(
            java.lang.Iterable<
                    ? extends
                        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                            .AudioChannelInput>
                values) {
          if (inputsBuilder_ == null) {
            ensureInputsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(values, inputs_);
            onChanged();
          } else {
            inputsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public Builder clearInputs() {
          if (inputsBuilder_ == null) {
            inputs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            inputsBuilder_.clear();
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public Builder removeInputs(int index) {
          if (inputsBuilder_ == null) {
            ensureInputsIsMutable();
            inputs_.remove(index);
            onChanged();
          } else {
            inputsBuilder_.remove(index);
          }
          return this;
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput.Builder
            getInputsBuilder(int index) {
          return getInputsFieldBuilder().getBuilder(index);
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInputOrBuilder
            getInputsOrBuilder(int index) {
          if (inputsBuilder_ == null) {
            return inputs_.get(index);
          } else {
            return inputsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public java.util.List<
                ? extends
                    com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                        .AudioChannelInputOrBuilder>
            getInputsOrBuilderList() {
          if (inputsBuilder_ != null) {
            return inputsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(inputs_);
          }
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput.Builder
            addInputsBuilder() {
          return getInputsFieldBuilder()
              .addBuilder(
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                      .AudioChannelInput.getDefaultInstance());
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                .AudioChannelInput.Builder
            addInputsBuilder(int index) {
          return getInputsFieldBuilder()
              .addBuilder(
                  index,
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                      .AudioChannelInput.getDefaultInstance());
        }
        /**
         *
         *
         * <pre>
         * List of `Job.inputs` for this audio channel.
         * </pre>
         *
         * <code>
         * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.AudioChannelInput inputs = 2;
         * </code>
         */
        public java.util.List<
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput.Builder>
            getInputsBuilderList() {
          return getInputsFieldBuilder().getBuilderList();
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput,
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInput.Builder,
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .AudioChannelInputOrBuilder>
            getInputsFieldBuilder() {
          if (inputsBuilder_ == null) {
            inputsBuilder_ =
                new com.google.protobuf.RepeatedFieldBuilderV3<
                    com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                        .AudioChannelInput,
                    com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                        .AudioChannelInput.Builder,
                    com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                        .AudioChannelInputOrBuilder>(
                    inputs_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
            inputs_ = null;
          }
          return inputsBuilder_;
        }

        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel)
      }

      // @@protoc_insertion_point(class_scope:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel)
      private static final com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
              .AudioChannel
          DEFAULT_INSTANCE;

      static {
        DEFAULT_INSTANCE =
            new com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel();
      }

      public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AudioChannel> PARSER =
          new com.google.protobuf.AbstractParser<AudioChannel>() {
            @java.lang.Override
            public AudioChannel parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new AudioChannel(input, extensionRegistry);
            }
          };

      public static com.google.protobuf.Parser<AudioChannel> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AudioChannel> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     *
     *
     * <pre>
     * Required. The `EditAtom.key` that references the atom with audio inputs in the
     * `Job.edit_list`.
     * </pre>
     *
     * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The `EditAtom.key` that references the atom with audio inputs in the
     * `Job.edit_list`.
     * </pre>
     *
     * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNELS_FIELD_NUMBER = 2;
    private java.util.List<
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel>
        channels_;
    /**
     *
     *
     * <pre>
     * List of `Channel`s for this audio stream.
     * for in-depth explanation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel>
        getChannelsList() {
      return channels_;
    }
    /**
     *
     *
     * <pre>
     * List of `Channel`s for this audio stream.
     * for in-depth explanation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
     * </code>
     */
    @java.lang.Override
    public java.util.List<
            ? extends
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
                    .AudioChannelOrBuilder>
        getChannelsOrBuilderList() {
      return channels_;
    }
    /**
     *
     *
     * <pre>
     * List of `Channel`s for this audio stream.
     * for in-depth explanation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
     * </code>
     */
    @java.lang.Override
    public int getChannelsCount() {
      return channels_.size();
    }
    /**
     *
     *
     * <pre>
     * List of `Channel`s for this audio stream.
     * for in-depth explanation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel getChannels(
        int index) {
      return channels_.get(index);
    }
    /**
     *
     *
     * <pre>
     * List of `Channel`s for this audio stream.
     * for in-depth explanation.
     * </pre>
     *
     * <code>
     * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
     * </code>
     */
    @java.lang.Override
    public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannelOrBuilder
        getChannelsOrBuilder(int index) {
      return channels_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      for (int i = 0; i < channels_.size(); i++) {
        output.writeMessage(2, channels_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      for (int i = 0; i < channels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, channels_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom)) {
        return super.equals(obj);
      }
      com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom other =
          (com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom) obj;

      if (!getKey().equals(other.getKey())) return false;
      if (!getChannelsList().equals(other.getChannelsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      if (getChannelsCount() > 0) {
        hash = (37 * hash) + CHANNELS_FIELD_NUMBER;
        hash = (53 * hash) + getChannelsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parseFrom(
        java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parseFrom(
        java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parseFrom(
        java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * Protobuf type {@code google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom)
        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
            .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
            .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.class,
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder.class);
      }

      // Construct using
      // com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
          getChannelsFieldBuilder();
        }
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        key_ = "";

        if (channelsBuilder_ == null) {
          channels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          channelsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
            .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_AudioAtom_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
          getDefaultInstanceForType() {
        return com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom build() {
        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom buildPartial() {
        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom result =
            new com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom(this);
        int from_bitField0_ = bitField0_;
        result.key_ = key_;
        if (channelsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            channels_ = java.util.Collections.unmodifiableList(channels_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.channels_ = channels_;
        } else {
          result.channels_ = channelsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom) {
          return mergeFrom((com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom other) {
        if (other
            == com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.getDefaultInstance())
          return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (channelsBuilder_ == null) {
          if (!other.channels_.isEmpty()) {
            if (channels_.isEmpty()) {
              channels_ = other.channels_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChannelsIsMutable();
              channels_.addAll(other.channels_);
            }
            onChanged();
          }
        } else {
          if (!other.channels_.isEmpty()) {
            if (channelsBuilder_.isEmpty()) {
              channelsBuilder_.dispose();
              channelsBuilder_ = null;
              channels_ = other.channels_;
              bitField0_ = (bitField0_ & ~0x00000001);
              channelsBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                      ? getChannelsFieldBuilder()
                      : null;
            } else {
              channelsBuilder_.addAllMessages(other.channels_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       *
       *
       * <pre>
       * Required. The `EditAtom.key` that references the atom with audio inputs in the
       * `Job.edit_list`.
       * </pre>
       *
       * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The `EditAtom.key` that references the atom with audio inputs in the
       * `Job.edit_list`.
       * </pre>
       *
       * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The `EditAtom.key` that references the atom with audio inputs in the
       * `Job.edit_list`.
       * </pre>
       *
       * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        key_ = value;
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The `EditAtom.key` that references the atom with audio inputs in the
       * `Job.edit_list`.
       * </pre>
       *
       * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @return This builder for chaining.
       */
      public Builder clearKey() {

        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The `EditAtom.key` that references the atom with audio inputs in the
       * `Job.edit_list`.
       * </pre>
       *
       * <code>string key = 1 [(.google.api.field_behavior) = REQUIRED];</code>
       *
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        key_ = value;
        onChanged();
        return this;
      }

      private java.util.List<
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel>
          channels_ = java.util.Collections.emptyList();

      private void ensureChannelsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          channels_ =
              new java.util.ArrayList<
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel>(
                  channels_);
          bitField0_ |= 0x00000001;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel,
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.Builder,
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannelOrBuilder>
          channelsBuilder_;

      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public java.util.List<
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel>
          getChannelsList() {
        if (channelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channels_);
        } else {
          return channelsBuilder_.getMessageList();
        }
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public int getChannelsCount() {
        if (channelsBuilder_ == null) {
          return channels_.size();
        } else {
          return channelsBuilder_.getCount();
        }
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
          getChannels(int index) {
        if (channelsBuilder_ == null) {
          return channels_.get(index);
        } else {
          return channelsBuilder_.getMessage(index);
        }
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public Builder setChannels(
          int index,
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.set(index, value);
          onChanged();
        } else {
          channelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public Builder setChannels(
          int index,
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.Builder
              builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public Builder addChannels(
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.add(value);
          onChanged();
        } else {
          channelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public Builder addChannels(
          int index,
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel value) {
        if (channelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsIsMutable();
          channels_.add(index, value);
          onChanged();
        } else {
          channelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public Builder addChannels(
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.Builder
              builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.add(builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public Builder addChannels(
          int index,
          com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.Builder
              builderForValue) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public Builder addAllChannels(
          java.lang.Iterable<
                  ? extends
                      com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel>
              values) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(values, channels_);
          onChanged();
        } else {
          channelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public Builder clearChannels() {
        if (channelsBuilder_ == null) {
          channels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          channelsBuilder_.clear();
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public Builder removeChannels(int index) {
        if (channelsBuilder_ == null) {
          ensureChannelsIsMutable();
          channels_.remove(index);
          onChanged();
        } else {
          channelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.Builder
          getChannelsBuilder(int index) {
        return getChannelsFieldBuilder().getBuilder(index);
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannelOrBuilder
          getChannelsOrBuilder(int index) {
        if (channelsBuilder_ == null) {
          return channels_.get(index);
        } else {
          return channelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public java.util.List<
              ? extends
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
                      .AudioChannelOrBuilder>
          getChannelsOrBuilderList() {
        if (channelsBuilder_ != null) {
          return channelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channels_);
        }
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.Builder
          addChannelsBuilder() {
        return getChannelsFieldBuilder()
            .addBuilder(
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.Builder
          addChannelsBuilder(int index) {
        return getChannelsFieldBuilder()
            .addBuilder(
                index,
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                    .getDefaultInstance());
      }
      /**
       *
       *
       * <pre>
       * List of `Channel`s for this audio stream.
       * for in-depth explanation.
       * </pre>
       *
       * <code>
       * repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel channels = 2;
       * </code>
       */
      public java.util.List<
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.Builder>
          getChannelsBuilderList() {
        return getChannelsFieldBuilder().getBuilderList();
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel,
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel.Builder,
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannelOrBuilder>
          getChannelsFieldBuilder() {
        if (channelsBuilder_ == null) {
          channelsBuilder_ =
              new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel,
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.AudioChannel
                      .Builder,
                  com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
                      .AudioChannelOrBuilder>(
                  channels_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
          channels_ = null;
        }
        return channelsBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom)
    private static final com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE = new com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom();
    }

    public static com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioAtom> PARSER =
        new com.google.protobuf.AbstractParser<AudioAtom>() {
          @java.lang.Override
          public AudioAtom parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new AudioAtom(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<AudioAtom> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioAtom> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int CODEC_FIELD_NUMBER = 1;
  private volatile java.lang.Object codec_;
  /**
   *
   *
   * <pre>
   * The codec for this audio stream. The default is `"aac"`.
   * Supported audio codecs:
   * - 'aac'
   * - 'aac-he'
   * - 'aac-he-v2'
   * - 'mp3'
   * - 'ac3'
   * - 'eac3'
   * </pre>
   *
   * <code>string codec = 1;</code>
   *
   * @return The codec.
   */
  @java.lang.Override
  public java.lang.String getCodec() {
    java.lang.Object ref = codec_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      codec_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * The codec for this audio stream. The default is `"aac"`.
   * Supported audio codecs:
   * - 'aac'
   * - 'aac-he'
   * - 'aac-he-v2'
   * - 'mp3'
   * - 'ac3'
   * - 'eac3'
   * </pre>
   *
   * <code>string codec = 1;</code>
   *
   * @return The bytes for codec.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCodecBytes() {
    java.lang.Object ref = codec_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      codec_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BITRATE_BPS_FIELD_NUMBER = 2;
  private int bitrateBps_;
  /**
   *
   *
   * <pre>
   * Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000.
   * </pre>
   *
   * <code>int32 bitrate_bps = 2 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bitrateBps.
   */
  @java.lang.Override
  public int getBitrateBps() {
    return bitrateBps_;
  }

  public static final int CHANNEL_COUNT_FIELD_NUMBER = 3;
  private int channelCount_;
  /**
   *
   *
   * <pre>
   * Number of audio channels. Must be between 1 and 6. The default is 2.
   * </pre>
   *
   * <code>int32 channel_count = 3;</code>
   *
   * @return The channelCount.
   */
  @java.lang.Override
  public int getChannelCount() {
    return channelCount_;
  }

  public static final int CHANNEL_LAYOUT_FIELD_NUMBER = 4;
  private com.google.protobuf.LazyStringList channelLayout_;
  /**
   *
   *
   * <pre>
   * A list of channel names specifying layout of the audio channels.
   * This only affects the metadata embedded in the container headers, if
   * supported by the specified format. The default is `["fl", "fr"]`.
   * Supported channel names:
   * - 'fl' - Front left channel
   * - 'fr' - Front right channel
   * - 'sl' - Side left channel
   * - 'sr' - Side right channel
   * - 'fc' - Front center channel
   * - 'lfe' - Low frequency
   * </pre>
   *
   * <code>repeated string channel_layout = 4;</code>
   *
   * @return A list containing the channelLayout.
   */
  public com.google.protobuf.ProtocolStringList getChannelLayoutList() {
    return channelLayout_;
  }
  /**
   *
   *
   * <pre>
   * A list of channel names specifying layout of the audio channels.
   * This only affects the metadata embedded in the container headers, if
   * supported by the specified format. The default is `["fl", "fr"]`.
   * Supported channel names:
   * - 'fl' - Front left channel
   * - 'fr' - Front right channel
   * - 'sl' - Side left channel
   * - 'sr' - Side right channel
   * - 'fc' - Front center channel
   * - 'lfe' - Low frequency
   * </pre>
   *
   * <code>repeated string channel_layout = 4;</code>
   *
   * @return The count of channelLayout.
   */
  public int getChannelLayoutCount() {
    return channelLayout_.size();
  }
  /**
   *
   *
   * <pre>
   * A list of channel names specifying layout of the audio channels.
   * This only affects the metadata embedded in the container headers, if
   * supported by the specified format. The default is `["fl", "fr"]`.
   * Supported channel names:
   * - 'fl' - Front left channel
   * - 'fr' - Front right channel
   * - 'sl' - Side left channel
   * - 'sr' - Side right channel
   * - 'fc' - Front center channel
   * - 'lfe' - Low frequency
   * </pre>
   *
   * <code>repeated string channel_layout = 4;</code>
   *
   * @param index The index of the element to return.
   * @return The channelLayout at the given index.
   */
  public java.lang.String getChannelLayout(int index) {
    return channelLayout_.get(index);
  }
  /**
   *
   *
   * <pre>
   * A list of channel names specifying layout of the audio channels.
   * This only affects the metadata embedded in the container headers, if
   * supported by the specified format. The default is `["fl", "fr"]`.
   * Supported channel names:
   * - 'fl' - Front left channel
   * - 'fr' - Front right channel
   * - 'sl' - Side left channel
   * - 'sr' - Side right channel
   * - 'fc' - Front center channel
   * - 'lfe' - Low frequency
   * </pre>
   *
   * <code>repeated string channel_layout = 4;</code>
   *
   * @param index The index of the value to return.
   * @return The bytes of the channelLayout at the given index.
   */
  public com.google.protobuf.ByteString getChannelLayoutBytes(int index) {
    return channelLayout_.getByteString(index);
  }

  public static final int MAPPING_FIELD_NUMBER = 5;
  private java.util.List<com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom> mapping_;
  /**
   *
   *
   * <pre>
   * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
   * </pre>
   *
   * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom>
      getMappingList() {
    return mapping_;
  }
  /**
   *
   *
   * <pre>
   * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
   * </pre>
   *
   * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;</code>
   */
  @java.lang.Override
  public java.util.List<
          ? extends com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtomOrBuilder>
      getMappingOrBuilderList() {
    return mapping_;
  }
  /**
   *
   *
   * <pre>
   * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
   * </pre>
   *
   * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;</code>
   */
  @java.lang.Override
  public int getMappingCount() {
    return mapping_.size();
  }
  /**
   *
   *
   * <pre>
   * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
   * </pre>
   *
   * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom getMapping(int index) {
    return mapping_.get(index);
  }
  /**
   *
   *
   * <pre>
   * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
   * </pre>
   *
   * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;</code>
   */
  @java.lang.Override
  public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtomOrBuilder
      getMappingOrBuilder(int index) {
    return mapping_.get(index);
  }

  public static final int SAMPLE_RATE_HERTZ_FIELD_NUMBER = 6;
  private int sampleRateHertz_;
  /**
   *
   *
   * <pre>
   * The audio sample rate in Hertz. The default is 48000 Hertz.
   * </pre>
   *
   * <code>int32 sample_rate_hertz = 6;</code>
   *
   * @return The sampleRateHertz.
   */
  @java.lang.Override
  public int getSampleRateHertz() {
    return sampleRateHertz_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getCodecBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, codec_);
    }
    if (bitrateBps_ != 0) {
      output.writeInt32(2, bitrateBps_);
    }
    if (channelCount_ != 0) {
      output.writeInt32(3, channelCount_);
    }
    for (int i = 0; i < channelLayout_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, channelLayout_.getRaw(i));
    }
    for (int i = 0; i < mapping_.size(); i++) {
      output.writeMessage(5, mapping_.get(i));
    }
    if (sampleRateHertz_ != 0) {
      output.writeInt32(6, sampleRateHertz_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getCodecBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, codec_);
    }
    if (bitrateBps_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, bitrateBps_);
    }
    if (channelCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, channelCount_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < channelLayout_.size(); i++) {
        dataSize += computeStringSizeNoTag(channelLayout_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getChannelLayoutList().size();
    }
    for (int i = 0; i < mapping_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, mapping_.get(i));
    }
    if (sampleRateHertz_ != 0) {
      size += com.google.protobuf.CodedOutputStream.computeInt32Size(6, sampleRateHertz_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.video.transcoder.v1beta1.AudioStream)) {
      return super.equals(obj);
    }
    com.google.cloud.video.transcoder.v1beta1.AudioStream other =
        (com.google.cloud.video.transcoder.v1beta1.AudioStream) obj;

    if (!getCodec().equals(other.getCodec())) return false;
    if (getBitrateBps() != other.getBitrateBps()) return false;
    if (getChannelCount() != other.getChannelCount()) return false;
    if (!getChannelLayoutList().equals(other.getChannelLayoutList())) return false;
    if (!getMappingList().equals(other.getMappingList())) return false;
    if (getSampleRateHertz() != other.getSampleRateHertz()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CODEC_FIELD_NUMBER;
    hash = (53 * hash) + getCodec().hashCode();
    hash = (37 * hash) + BITRATE_BPS_FIELD_NUMBER;
    hash = (53 * hash) + getBitrateBps();
    hash = (37 * hash) + CHANNEL_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getChannelCount();
    if (getChannelLayoutCount() > 0) {
      hash = (37 * hash) + CHANNEL_LAYOUT_FIELD_NUMBER;
      hash = (53 * hash) + getChannelLayoutList().hashCode();
    }
    if (getMappingCount() > 0) {
      hash = (37 * hash) + MAPPING_FIELD_NUMBER;
      hash = (53 * hash) + getMappingList().hashCode();
    }
    hash = (37 * hash) + SAMPLE_RATE_HERTZ_FIELD_NUMBER;
    hash = (53 * hash) + getSampleRateHertz();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.video.transcoder.v1beta1.AudioStream prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Audio stream resource.
   * </pre>
   *
   * Protobuf type {@code google.cloud.video.transcoder.v1beta1.AudioStream}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.video.transcoder.v1beta1.AudioStream)
      com.google.cloud.video.transcoder.v1beta1.AudioStreamOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
          .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
          .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.video.transcoder.v1beta1.AudioStream.class,
              com.google.cloud.video.transcoder.v1beta1.AudioStream.Builder.class);
    }

    // Construct using com.google.cloud.video.transcoder.v1beta1.AudioStream.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
        getMappingFieldBuilder();
      }
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      codec_ = "";

      bitrateBps_ = 0;

      channelCount_ = 0;

      channelLayout_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (mappingBuilder_ == null) {
        mapping_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        mappingBuilder_.clear();
      }
      sampleRateHertz_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.video.transcoder.v1beta1.ResourcesProto
          .internal_static_google_cloud_video_transcoder_v1beta1_AudioStream_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.video.transcoder.v1beta1.AudioStream getDefaultInstanceForType() {
      return com.google.cloud.video.transcoder.v1beta1.AudioStream.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.video.transcoder.v1beta1.AudioStream build() {
      com.google.cloud.video.transcoder.v1beta1.AudioStream result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.video.transcoder.v1beta1.AudioStream buildPartial() {
      com.google.cloud.video.transcoder.v1beta1.AudioStream result =
          new com.google.cloud.video.transcoder.v1beta1.AudioStream(this);
      int from_bitField0_ = bitField0_;
      result.codec_ = codec_;
      result.bitrateBps_ = bitrateBps_;
      result.channelCount_ = channelCount_;
      if (((bitField0_ & 0x00000001) != 0)) {
        channelLayout_ = channelLayout_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.channelLayout_ = channelLayout_;
      if (mappingBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          mapping_ = java.util.Collections.unmodifiableList(mapping_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.mapping_ = mapping_;
      } else {
        result.mapping_ = mappingBuilder_.build();
      }
      result.sampleRateHertz_ = sampleRateHertz_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.video.transcoder.v1beta1.AudioStream) {
        return mergeFrom((com.google.cloud.video.transcoder.v1beta1.AudioStream) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.video.transcoder.v1beta1.AudioStream other) {
      if (other == com.google.cloud.video.transcoder.v1beta1.AudioStream.getDefaultInstance())
        return this;
      if (!other.getCodec().isEmpty()) {
        codec_ = other.codec_;
        onChanged();
      }
      if (other.getBitrateBps() != 0) {
        setBitrateBps(other.getBitrateBps());
      }
      if (other.getChannelCount() != 0) {
        setChannelCount(other.getChannelCount());
      }
      if (!other.channelLayout_.isEmpty()) {
        if (channelLayout_.isEmpty()) {
          channelLayout_ = other.channelLayout_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureChannelLayoutIsMutable();
          channelLayout_.addAll(other.channelLayout_);
        }
        onChanged();
      }
      if (mappingBuilder_ == null) {
        if (!other.mapping_.isEmpty()) {
          if (mapping_.isEmpty()) {
            mapping_ = other.mapping_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMappingIsMutable();
            mapping_.addAll(other.mapping_);
          }
          onChanged();
        }
      } else {
        if (!other.mapping_.isEmpty()) {
          if (mappingBuilder_.isEmpty()) {
            mappingBuilder_.dispose();
            mappingBuilder_ = null;
            mapping_ = other.mapping_;
            bitField0_ = (bitField0_ & ~0x00000002);
            mappingBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
                    ? getMappingFieldBuilder()
                    : null;
          } else {
            mappingBuilder_.addAllMessages(other.mapping_);
          }
        }
      }
      if (other.getSampleRateHertz() != 0) {
        setSampleRateHertz(other.getSampleRateHertz());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.video.transcoder.v1beta1.AudioStream parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage =
            (com.google.cloud.video.transcoder.v1beta1.AudioStream) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int bitField0_;

    private java.lang.Object codec_ = "";
    /**
     *
     *
     * <pre>
     * The codec for this audio stream. The default is `"aac"`.
     * Supported audio codecs:
     * - 'aac'
     * - 'aac-he'
     * - 'aac-he-v2'
     * - 'mp3'
     * - 'ac3'
     * - 'eac3'
     * </pre>
     *
     * <code>string codec = 1;</code>
     *
     * @return The codec.
     */
    public java.lang.String getCodec() {
      java.lang.Object ref = codec_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        codec_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The codec for this audio stream. The default is `"aac"`.
     * Supported audio codecs:
     * - 'aac'
     * - 'aac-he'
     * - 'aac-he-v2'
     * - 'mp3'
     * - 'ac3'
     * - 'eac3'
     * </pre>
     *
     * <code>string codec = 1;</code>
     *
     * @return The bytes for codec.
     */
    public com.google.protobuf.ByteString getCodecBytes() {
      java.lang.Object ref = codec_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        codec_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * The codec for this audio stream. The default is `"aac"`.
     * Supported audio codecs:
     * - 'aac'
     * - 'aac-he'
     * - 'aac-he-v2'
     * - 'mp3'
     * - 'ac3'
     * - 'eac3'
     * </pre>
     *
     * <code>string codec = 1;</code>
     *
     * @param value The codec to set.
     * @return This builder for chaining.
     */
    public Builder setCodec(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      codec_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The codec for this audio stream. The default is `"aac"`.
     * Supported audio codecs:
     * - 'aac'
     * - 'aac-he'
     * - 'aac-he-v2'
     * - 'mp3'
     * - 'ac3'
     * - 'eac3'
     * </pre>
     *
     * <code>string codec = 1;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearCodec() {

      codec_ = getDefaultInstance().getCodec();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The codec for this audio stream. The default is `"aac"`.
     * Supported audio codecs:
     * - 'aac'
     * - 'aac-he'
     * - 'aac-he-v2'
     * - 'mp3'
     * - 'ac3'
     * - 'eac3'
     * </pre>
     *
     * <code>string codec = 1;</code>
     *
     * @param value The bytes for codec to set.
     * @return This builder for chaining.
     */
    public Builder setCodecBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      codec_ = value;
      onChanged();
      return this;
    }

    private int bitrateBps_;
    /**
     *
     *
     * <pre>
     * Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000.
     * </pre>
     *
     * <code>int32 bitrate_bps = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bitrateBps.
     */
    @java.lang.Override
    public int getBitrateBps() {
      return bitrateBps_;
    }
    /**
     *
     *
     * <pre>
     * Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000.
     * </pre>
     *
     * <code>int32 bitrate_bps = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bitrateBps to set.
     * @return This builder for chaining.
     */
    public Builder setBitrateBps(int value) {

      bitrateBps_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000.
     * </pre>
     *
     * <code>int32 bitrate_bps = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearBitrateBps() {

      bitrateBps_ = 0;
      onChanged();
      return this;
    }

    private int channelCount_;
    /**
     *
     *
     * <pre>
     * Number of audio channels. Must be between 1 and 6. The default is 2.
     * </pre>
     *
     * <code>int32 channel_count = 3;</code>
     *
     * @return The channelCount.
     */
    @java.lang.Override
    public int getChannelCount() {
      return channelCount_;
    }
    /**
     *
     *
     * <pre>
     * Number of audio channels. Must be between 1 and 6. The default is 2.
     * </pre>
     *
     * <code>int32 channel_count = 3;</code>
     *
     * @param value The channelCount to set.
     * @return This builder for chaining.
     */
    public Builder setChannelCount(int value) {

      channelCount_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Number of audio channels. Must be between 1 and 6. The default is 2.
     * </pre>
     *
     * <code>int32 channel_count = 3;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearChannelCount() {

      channelCount_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList channelLayout_ =
        com.google.protobuf.LazyStringArrayList.EMPTY;

    private void ensureChannelLayoutIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        channelLayout_ = new com.google.protobuf.LazyStringArrayList(channelLayout_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     *
     *
     * <pre>
     * A list of channel names specifying layout of the audio channels.
     * This only affects the metadata embedded in the container headers, if
     * supported by the specified format. The default is `["fl", "fr"]`.
     * Supported channel names:
     * - 'fl' - Front left channel
     * - 'fr' - Front right channel
     * - 'sl' - Side left channel
     * - 'sr' - Side right channel
     * - 'fc' - Front center channel
     * - 'lfe' - Low frequency
     * </pre>
     *
     * <code>repeated string channel_layout = 4;</code>
     *
     * @return A list containing the channelLayout.
     */
    public com.google.protobuf.ProtocolStringList getChannelLayoutList() {
      return channelLayout_.getUnmodifiableView();
    }
    /**
     *
     *
     * <pre>
     * A list of channel names specifying layout of the audio channels.
     * This only affects the metadata embedded in the container headers, if
     * supported by the specified format. The default is `["fl", "fr"]`.
     * Supported channel names:
     * - 'fl' - Front left channel
     * - 'fr' - Front right channel
     * - 'sl' - Side left channel
     * - 'sr' - Side right channel
     * - 'fc' - Front center channel
     * - 'lfe' - Low frequency
     * </pre>
     *
     * <code>repeated string channel_layout = 4;</code>
     *
     * @return The count of channelLayout.
     */
    public int getChannelLayoutCount() {
      return channelLayout_.size();
    }
    /**
     *
     *
     * <pre>
     * A list of channel names specifying layout of the audio channels.
     * This only affects the metadata embedded in the container headers, if
     * supported by the specified format. The default is `["fl", "fr"]`.
     * Supported channel names:
     * - 'fl' - Front left channel
     * - 'fr' - Front right channel
     * - 'sl' - Side left channel
     * - 'sr' - Side right channel
     * - 'fc' - Front center channel
     * - 'lfe' - Low frequency
     * </pre>
     *
     * <code>repeated string channel_layout = 4;</code>
     *
     * @param index The index of the element to return.
     * @return The channelLayout at the given index.
     */
    public java.lang.String getChannelLayout(int index) {
      return channelLayout_.get(index);
    }
    /**
     *
     *
     * <pre>
     * A list of channel names specifying layout of the audio channels.
     * This only affects the metadata embedded in the container headers, if
     * supported by the specified format. The default is `["fl", "fr"]`.
     * Supported channel names:
     * - 'fl' - Front left channel
     * - 'fr' - Front right channel
     * - 'sl' - Side left channel
     * - 'sr' - Side right channel
     * - 'fc' - Front center channel
     * - 'lfe' - Low frequency
     * </pre>
     *
     * <code>repeated string channel_layout = 4;</code>
     *
     * @param index The index of the value to return.
     * @return The bytes of the channelLayout at the given index.
     */
    public com.google.protobuf.ByteString getChannelLayoutBytes(int index) {
      return channelLayout_.getByteString(index);
    }
    /**
     *
     *
     * <pre>
     * A list of channel names specifying layout of the audio channels.
     * This only affects the metadata embedded in the container headers, if
     * supported by the specified format. The default is `["fl", "fr"]`.
     * Supported channel names:
     * - 'fl' - Front left channel
     * - 'fr' - Front right channel
     * - 'sl' - Side left channel
     * - 'sr' - Side right channel
     * - 'fc' - Front center channel
     * - 'lfe' - Low frequency
     * </pre>
     *
     * <code>repeated string channel_layout = 4;</code>
     *
     * @param index The index to set the value at.
     * @param value The channelLayout to set.
     * @return This builder for chaining.
     */
    public Builder setChannelLayout(int index, java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureChannelLayoutIsMutable();
      channelLayout_.set(index, value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of channel names specifying layout of the audio channels.
     * This only affects the metadata embedded in the container headers, if
     * supported by the specified format. The default is `["fl", "fr"]`.
     * Supported channel names:
     * - 'fl' - Front left channel
     * - 'fr' - Front right channel
     * - 'sl' - Side left channel
     * - 'sr' - Side right channel
     * - 'fc' - Front center channel
     * - 'lfe' - Low frequency
     * </pre>
     *
     * <code>repeated string channel_layout = 4;</code>
     *
     * @param value The channelLayout to add.
     * @return This builder for chaining.
     */
    public Builder addChannelLayout(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureChannelLayoutIsMutable();
      channelLayout_.add(value);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of channel names specifying layout of the audio channels.
     * This only affects the metadata embedded in the container headers, if
     * supported by the specified format. The default is `["fl", "fr"]`.
     * Supported channel names:
     * - 'fl' - Front left channel
     * - 'fr' - Front right channel
     * - 'sl' - Side left channel
     * - 'sr' - Side right channel
     * - 'fc' - Front center channel
     * - 'lfe' - Low frequency
     * </pre>
     *
     * <code>repeated string channel_layout = 4;</code>
     *
     * @param values The channelLayout to add.
     * @return This builder for chaining.
     */
    public Builder addAllChannelLayout(java.lang.Iterable<java.lang.String> values) {
      ensureChannelLayoutIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(values, channelLayout_);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of channel names specifying layout of the audio channels.
     * This only affects the metadata embedded in the container headers, if
     * supported by the specified format. The default is `["fl", "fr"]`.
     * Supported channel names:
     * - 'fl' - Front left channel
     * - 'fr' - Front right channel
     * - 'sl' - Side left channel
     * - 'sr' - Side right channel
     * - 'fc' - Front center channel
     * - 'lfe' - Low frequency
     * </pre>
     *
     * <code>repeated string channel_layout = 4;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearChannelLayout() {
      channelLayout_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * A list of channel names specifying layout of the audio channels.
     * This only affects the metadata embedded in the container headers, if
     * supported by the specified format. The default is `["fl", "fr"]`.
     * Supported channel names:
     * - 'fl' - Front left channel
     * - 'fr' - Front right channel
     * - 'sl' - Side left channel
     * - 'sr' - Side right channel
     * - 'fc' - Front center channel
     * - 'lfe' - Low frequency
     * </pre>
     *
     * <code>repeated string channel_layout = 4;</code>
     *
     * @param value The bytes of the channelLayout to add.
     * @return This builder for chaining.
     */
    public Builder addChannelLayoutBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      ensureChannelLayoutIsMutable();
      channelLayout_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom>
        mapping_ = java.util.Collections.emptyList();

    private void ensureMappingIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        mapping_ =
            new java.util.ArrayList<
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom>(mapping_);
        bitField0_ |= 0x00000002;
      }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom,
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder,
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtomOrBuilder>
        mappingBuilder_;

    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public java.util.List<com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom>
        getMappingList() {
      if (mappingBuilder_ == null) {
        return java.util.Collections.unmodifiableList(mapping_);
      } else {
        return mappingBuilder_.getMessageList();
      }
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public int getMappingCount() {
      if (mappingBuilder_ == null) {
        return mapping_.size();
      } else {
        return mappingBuilder_.getCount();
      }
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom getMapping(int index) {
      if (mappingBuilder_ == null) {
        return mapping_.get(index);
      } else {
        return mappingBuilder_.getMessage(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public Builder setMapping(
        int index, com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom value) {
      if (mappingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMappingIsMutable();
        mapping_.set(index, value);
        onChanged();
      } else {
        mappingBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public Builder setMapping(
        int index,
        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder builderForValue) {
      if (mappingBuilder_ == null) {
        ensureMappingIsMutable();
        mapping_.set(index, builderForValue.build());
        onChanged();
      } else {
        mappingBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public Builder addMapping(
        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom value) {
      if (mappingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMappingIsMutable();
        mapping_.add(value);
        onChanged();
      } else {
        mappingBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public Builder addMapping(
        int index, com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom value) {
      if (mappingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMappingIsMutable();
        mapping_.add(index, value);
        onChanged();
      } else {
        mappingBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public Builder addMapping(
        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder builderForValue) {
      if (mappingBuilder_ == null) {
        ensureMappingIsMutable();
        mapping_.add(builderForValue.build());
        onChanged();
      } else {
        mappingBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public Builder addMapping(
        int index,
        com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder builderForValue) {
      if (mappingBuilder_ == null) {
        ensureMappingIsMutable();
        mapping_.add(index, builderForValue.build());
        onChanged();
      } else {
        mappingBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public Builder addAllMapping(
        java.lang.Iterable<
                ? extends com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom>
            values) {
      if (mappingBuilder_ == null) {
        ensureMappingIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, mapping_);
        onChanged();
      } else {
        mappingBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public Builder clearMapping() {
      if (mappingBuilder_ == null) {
        mapping_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        mappingBuilder_.clear();
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public Builder removeMapping(int index) {
      if (mappingBuilder_ == null) {
        ensureMappingIsMutable();
        mapping_.remove(index);
        onChanged();
      } else {
        mappingBuilder_.remove(index);
      }
      return this;
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder
        getMappingBuilder(int index) {
      return getMappingFieldBuilder().getBuilder(index);
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtomOrBuilder
        getMappingOrBuilder(int index) {
      if (mappingBuilder_ == null) {
        return mapping_.get(index);
      } else {
        return mappingBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public java.util.List<
            ? extends com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtomOrBuilder>
        getMappingOrBuilderList() {
      if (mappingBuilder_ != null) {
        return mappingBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(mapping_);
      }
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder
        addMappingBuilder() {
      return getMappingFieldBuilder()
          .addBuilder(
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder
        addMappingBuilder(int index) {
      return getMappingFieldBuilder()
          .addBuilder(
              index,
              com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.getDefaultInstance());
    }
    /**
     *
     *
     * <pre>
     * The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
     * </pre>
     *
     * <code>repeated .google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom mapping = 5;
     * </code>
     */
    public java.util.List<com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder>
        getMappingBuilderList() {
      return getMappingFieldBuilder().getBuilderList();
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom,
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder,
            com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtomOrBuilder>
        getMappingFieldBuilder() {
      if (mappingBuilder_ == null) {
        mappingBuilder_ =
            new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom,
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtom.Builder,
                com.google.cloud.video.transcoder.v1beta1.AudioStream.AudioAtomOrBuilder>(
                mapping_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
        mapping_ = null;
      }
      return mappingBuilder_;
    }

    private int sampleRateHertz_;
    /**
     *
     *
     * <pre>
     * The audio sample rate in Hertz. The default is 48000 Hertz.
     * </pre>
     *
     * <code>int32 sample_rate_hertz = 6;</code>
     *
     * @return The sampleRateHertz.
     */
    @java.lang.Override
    public int getSampleRateHertz() {
      return sampleRateHertz_;
    }
    /**
     *
     *
     * <pre>
     * The audio sample rate in Hertz. The default is 48000 Hertz.
     * </pre>
     *
     * <code>int32 sample_rate_hertz = 6;</code>
     *
     * @param value The sampleRateHertz to set.
     * @return This builder for chaining.
     */
    public Builder setSampleRateHertz(int value) {

      sampleRateHertz_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * The audio sample rate in Hertz. The default is 48000 Hertz.
     * </pre>
     *
     * <code>int32 sample_rate_hertz = 6;</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearSampleRateHertz() {

      sampleRateHertz_ = 0;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.video.transcoder.v1beta1.AudioStream)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.video.transcoder.v1beta1.AudioStream)
  private static final com.google.cloud.video.transcoder.v1beta1.AudioStream DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.video.transcoder.v1beta1.AudioStream();
  }

  public static com.google.cloud.video.transcoder.v1beta1.AudioStream getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AudioStream> PARSER =
      new com.google.protobuf.AbstractParser<AudioStream>() {
        @java.lang.Override
        public AudioStream parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AudioStream(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<AudioStream> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AudioStream> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.video.transcoder.v1beta1.AudioStream getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
